x_value_0: BITVECTOR(32) ;
x_value_1: BITVECTOR(32) ;
x_value_2: BITVECTOR(32) ;
x_value_3: BITVECTOR(32) ;

index: BITVECTOR(20) ;

index1_0: BITVECTOR(10) ;
index1_1: BITVECTOR(10) ;
index1_2: BITVECTOR(10) ;
index1_3: BITVECTOR(10) ;
index1_4: BITVECTOR(10) ;

index2_0: BITVECTOR(10) ;
index2_1: BITVECTOR(10) ;
index2_2: BITVECTOR(10) ;
index2_3: BITVECTOR(10) ;
index2_4: BITVECTOR(10) ;

ASSERT( index1_0 = index2_0 ) ;
ASSERT( index1_1 = index2_1 ) ;
ASSERT( index1_2 = 0bin0000000000 ) ;
ASSERT( index1_3 = 0bin0000101000 ) ;
ASSERT( index1_4 = 0bin1101000010 ) ;
ASSERT( index2_2 = 0bin0001010100 ) ;
ASSERT( index2_3 = 0bin1001000000 ) ;
ASSERT( index2_4 = 0bin0001000010 ) ;
ASSERT( index = index1_0@index1_1 ) ;

c_value_index1_0_0: BITVECTOR(64) ;
c_value_index1_0_1: BITVECTOR(64) ;
c_value_index1_0_2: BITVECTOR(64) ;
c_value_index1_0_3: BITVECTOR(64) ;
c_value_index1_0_4: BITVECTOR(64) ;
c_value_index1_1_0: BITVECTOR(64) ;
c_value_index1_1_1: BITVECTOR(64) ;
c_value_index1_1_2: BITVECTOR(64) ;
c_value_index1_1_3: BITVECTOR(64) ;
c_value_index1_1_4: BITVECTOR(64) ;
c_value_index1_2_0: BITVECTOR(64) ;
c_value_index1_2_1: BITVECTOR(64) ;
c_value_index1_2_2: BITVECTOR(64) ;
c_value_index1_2_3: BITVECTOR(64) ;
c_value_index1_2_4: BITVECTOR(64) ;
c_value_index1_3_0: BITVECTOR(64) ;
c_value_index1_3_1: BITVECTOR(64) ;
c_value_index1_3_2: BITVECTOR(64) ;
c_value_index1_3_3: BITVECTOR(64) ;
c_value_index1_3_4: BITVECTOR(64) ;
c_value_index1_4_0: BITVECTOR(64) ;
c_value_index1_4_1: BITVECTOR(64) ;
c_value_index1_4_2: BITVECTOR(64) ;
c_value_index1_4_3: BITVECTOR(64) ;
c_value_index1_4_4: BITVECTOR(64) ;

c_value_index2_0_0: BITVECTOR(64) ;
c_value_index2_0_1: BITVECTOR(64) ;
c_value_index2_0_2: BITVECTOR(64) ;
c_value_index2_0_3: BITVECTOR(64) ;
c_value_index2_0_4: BITVECTOR(64) ;
c_value_index2_1_0: BITVECTOR(64) ;
c_value_index2_1_1: BITVECTOR(64) ;
c_value_index2_1_2: BITVECTOR(64) ;
c_value_index2_1_3: BITVECTOR(64) ;
c_value_index2_1_4: BITVECTOR(64) ;
c_value_index2_2_0: BITVECTOR(64) ;
c_value_index2_2_1: BITVECTOR(64) ;
c_value_index2_2_2: BITVECTOR(64) ;
c_value_index2_2_3: BITVECTOR(64) ;
c_value_index2_2_4: BITVECTOR(64) ;
c_value_index2_3_0: BITVECTOR(64) ;
c_value_index2_3_1: BITVECTOR(64) ;
c_value_index2_3_2: BITVECTOR(64) ;
c_value_index2_3_3: BITVECTOR(64) ;
c_value_index2_3_4: BITVECTOR(64) ;
c_value_index2_4_0: BITVECTOR(64) ;
c_value_index2_4_1: BITVECTOR(64) ;
c_value_index2_4_2: BITVECTOR(64) ;
c_value_index2_4_3: BITVECTOR(64) ;
c_value_index2_4_4: BITVECTOR(64) ;

afterxor_value_index1_0_0: BITVECTOR(64) ;
afterxor_value_index1_0_1: BITVECTOR(64) ;
afterxor_value_index1_0_2: BITVECTOR(64) ;
afterxor_value_index1_0_3: BITVECTOR(64) ;
afterxor_value_index1_0_4: BITVECTOR(64) ;
afterxor_value_index1_1_0: BITVECTOR(64) ;
afterxor_value_index1_1_1: BITVECTOR(64) ;
afterxor_value_index1_1_2: BITVECTOR(64) ;
afterxor_value_index1_1_3: BITVECTOR(64) ;
afterxor_value_index1_1_4: BITVECTOR(64) ;
afterxor_value_index1_2_0: BITVECTOR(64) ;
afterxor_value_index1_2_1: BITVECTOR(64) ;
afterxor_value_index1_2_2: BITVECTOR(64) ;
afterxor_value_index1_2_3: BITVECTOR(64) ;
afterxor_value_index1_2_4: BITVECTOR(64) ;
afterxor_value_index1_3_0: BITVECTOR(64) ;
afterxor_value_index1_3_1: BITVECTOR(64) ;
afterxor_value_index1_3_2: BITVECTOR(64) ;
afterxor_value_index1_3_3: BITVECTOR(64) ;
afterxor_value_index1_3_4: BITVECTOR(64) ;
afterxor_value_index1_4_0: BITVECTOR(64) ;
afterxor_value_index1_4_1: BITVECTOR(64) ;
afterxor_value_index1_4_2: BITVECTOR(64) ;
afterxor_value_index1_4_3: BITVECTOR(64) ;
afterxor_value_index1_4_4: BITVECTOR(64) ;

middlesbox_1_value_index1_0_0: BITVECTOR(64) ;
middlesbox_1_value_index1_0_1: BITVECTOR(64) ;
middlesbox_1_value_index1_0_2: BITVECTOR(64) ;
middlesbox_1_value_index1_0_3: BITVECTOR(64) ;
middlesbox_1_value_index1_0_4: BITVECTOR(64) ;
middlesbox_1_value_index1_1_0: BITVECTOR(64) ;
middlesbox_1_value_index1_1_1: BITVECTOR(64) ;
middlesbox_1_value_index1_1_2: BITVECTOR(64) ;
middlesbox_1_value_index1_1_3: BITVECTOR(64) ;
middlesbox_1_value_index1_1_4: BITVECTOR(64) ;
middlesbox_1_value_index1_2_0: BITVECTOR(64) ;
middlesbox_1_value_index1_2_1: BITVECTOR(64) ;
middlesbox_1_value_index1_2_2: BITVECTOR(64) ;
middlesbox_1_value_index1_2_3: BITVECTOR(64) ;
middlesbox_1_value_index1_2_4: BITVECTOR(64) ;
middlesbox_1_value_index1_3_0: BITVECTOR(64) ;
middlesbox_1_value_index1_3_1: BITVECTOR(64) ;
middlesbox_1_value_index1_3_2: BITVECTOR(64) ;
middlesbox_1_value_index1_3_3: BITVECTOR(64) ;
middlesbox_1_value_index1_3_4: BITVECTOR(64) ;

middlesbox_2_value_index1_0_0: BITVECTOR(64) ;
middlesbox_2_value_index1_0_1: BITVECTOR(64) ;
middlesbox_2_value_index1_0_2: BITVECTOR(64) ;
middlesbox_2_value_index1_0_3: BITVECTOR(64) ;
middlesbox_2_value_index1_0_4: BITVECTOR(64) ;
middlesbox_2_value_index1_1_0: BITVECTOR(64) ;
middlesbox_2_value_index1_1_1: BITVECTOR(64) ;
middlesbox_2_value_index1_1_2: BITVECTOR(64) ;
middlesbox_2_value_index1_1_3: BITVECTOR(64) ;
middlesbox_2_value_index1_1_4: BITVECTOR(64) ;
middlesbox_2_value_index1_2_0: BITVECTOR(64) ;
middlesbox_2_value_index1_2_1: BITVECTOR(64) ;
middlesbox_2_value_index1_2_2: BITVECTOR(64) ;
middlesbox_2_value_index1_2_3: BITVECTOR(64) ;
middlesbox_2_value_index1_2_4: BITVECTOR(64) ;
middlesbox_2_value_index1_3_0: BITVECTOR(64) ;
middlesbox_2_value_index1_3_1: BITVECTOR(64) ;
middlesbox_2_value_index1_3_2: BITVECTOR(64) ;
middlesbox_2_value_index1_3_3: BITVECTOR(64) ;
middlesbox_2_value_index1_3_4: BITVECTOR(64) ;

middlesbox_3_value_index1_0_0: BITVECTOR(64) ;
middlesbox_3_value_index1_0_1: BITVECTOR(64) ;
middlesbox_3_value_index1_0_2: BITVECTOR(64) ;
middlesbox_3_value_index1_0_3: BITVECTOR(64) ;
middlesbox_3_value_index1_0_4: BITVECTOR(64) ;
middlesbox_3_value_index1_1_0: BITVECTOR(64) ;
middlesbox_3_value_index1_1_1: BITVECTOR(64) ;
middlesbox_3_value_index1_1_2: BITVECTOR(64) ;
middlesbox_3_value_index1_1_3: BITVECTOR(64) ;
middlesbox_3_value_index1_1_4: BITVECTOR(64) ;
middlesbox_3_value_index1_2_0: BITVECTOR(64) ;
middlesbox_3_value_index1_2_1: BITVECTOR(64) ;
middlesbox_3_value_index1_2_2: BITVECTOR(64) ;
middlesbox_3_value_index1_2_3: BITVECTOR(64) ;
middlesbox_3_value_index1_2_4: BITVECTOR(64) ;
middlesbox_3_value_index1_3_0: BITVECTOR(64) ;
middlesbox_3_value_index1_3_1: BITVECTOR(64) ;
middlesbox_3_value_index1_3_2: BITVECTOR(64) ;
middlesbox_3_value_index1_3_3: BITVECTOR(64) ;
middlesbox_3_value_index1_3_4: BITVECTOR(64) ;

middlesbox_4_value_index1_0_0: BITVECTOR(64) ;
middlesbox_4_value_index1_0_1: BITVECTOR(64) ;
middlesbox_4_value_index1_0_2: BITVECTOR(64) ;
middlesbox_4_value_index1_0_3: BITVECTOR(64) ;
middlesbox_4_value_index1_0_4: BITVECTOR(64) ;
middlesbox_4_value_index1_1_0: BITVECTOR(64) ;
middlesbox_4_value_index1_1_1: BITVECTOR(64) ;
middlesbox_4_value_index1_1_2: BITVECTOR(64) ;
middlesbox_4_value_index1_1_3: BITVECTOR(64) ;
middlesbox_4_value_index1_1_4: BITVECTOR(64) ;
middlesbox_4_value_index1_2_0: BITVECTOR(64) ;
middlesbox_4_value_index1_2_1: BITVECTOR(64) ;
middlesbox_4_value_index1_2_2: BITVECTOR(64) ;
middlesbox_4_value_index1_2_3: BITVECTOR(64) ;
middlesbox_4_value_index1_2_4: BITVECTOR(64) ;
middlesbox_4_value_index1_3_0: BITVECTOR(64) ;
middlesbox_4_value_index1_3_1: BITVECTOR(64) ;
middlesbox_4_value_index1_3_2: BITVECTOR(64) ;
middlesbox_4_value_index1_3_3: BITVECTOR(64) ;
middlesbox_4_value_index1_3_4: BITVECTOR(64) ;

aftersbox_value_index1_0_0: BITVECTOR(64) ;
aftersbox_value_index1_0_1: BITVECTOR(64) ;
aftersbox_value_index1_0_2: BITVECTOR(64) ;
aftersbox_value_index1_0_3: BITVECTOR(64) ;
aftersbox_value_index1_0_4: BITVECTOR(64) ;
aftersbox_value_index1_1_0: BITVECTOR(64) ;
aftersbox_value_index1_1_1: BITVECTOR(64) ;
aftersbox_value_index1_1_2: BITVECTOR(64) ;
aftersbox_value_index1_1_3: BITVECTOR(64) ;
aftersbox_value_index1_1_4: BITVECTOR(64) ;
aftersbox_value_index1_2_0: BITVECTOR(64) ;
aftersbox_value_index1_2_1: BITVECTOR(64) ;
aftersbox_value_index1_2_2: BITVECTOR(64) ;
aftersbox_value_index1_2_3: BITVECTOR(64) ;
aftersbox_value_index1_2_4: BITVECTOR(64) ;
aftersbox_value_index1_3_0: BITVECTOR(64) ;
aftersbox_value_index1_3_1: BITVECTOR(64) ;
aftersbox_value_index1_3_2: BITVECTOR(64) ;
aftersbox_value_index1_3_3: BITVECTOR(64) ;
aftersbox_value_index1_3_4: BITVECTOR(64) ;

middlelinearlayer_value_index1_0_0: BITVECTOR(64) ;
middlelinearlayer_value_index1_0_1: BITVECTOR(64) ;
middlelinearlayer_value_index1_0_2: BITVECTOR(64) ;
middlelinearlayer_value_index1_0_3: BITVECTOR(64) ;
middlelinearlayer_value_index1_0_4: BITVECTOR(64) ;
middlelinearlayer_value_index1_1_0: BITVECTOR(64) ;
middlelinearlayer_value_index1_1_1: BITVECTOR(64) ;
middlelinearlayer_value_index1_1_2: BITVECTOR(64) ;
middlelinearlayer_value_index1_1_3: BITVECTOR(64) ;
middlelinearlayer_value_index1_1_4: BITVECTOR(64) ;
middlelinearlayer_value_index1_2_0: BITVECTOR(64) ;
middlelinearlayer_value_index1_2_1: BITVECTOR(64) ;
middlelinearlayer_value_index1_2_2: BITVECTOR(64) ;
middlelinearlayer_value_index1_2_3: BITVECTOR(64) ;
middlelinearlayer_value_index1_2_4: BITVECTOR(64) ;
middlelinearlayer_value_index1_3_0: BITVECTOR(64) ;
middlelinearlayer_value_index1_3_1: BITVECTOR(64) ;
middlelinearlayer_value_index1_3_2: BITVECTOR(64) ;
middlelinearlayer_value_index1_3_3: BITVECTOR(64) ;
middlelinearlayer_value_index1_3_4: BITVECTOR(64) ;

afterlinearlayer_value_index1_0_0: BITVECTOR(64) ;
afterlinearlayer_value_index1_0_1: BITVECTOR(64) ;
afterlinearlayer_value_index1_0_2: BITVECTOR(64) ;
afterlinearlayer_value_index1_0_3: BITVECTOR(64) ;
afterlinearlayer_value_index1_0_4: BITVECTOR(64) ;
afterlinearlayer_value_index1_1_0: BITVECTOR(64) ;
afterlinearlayer_value_index1_1_1: BITVECTOR(64) ;
afterlinearlayer_value_index1_1_2: BITVECTOR(64) ;
afterlinearlayer_value_index1_1_3: BITVECTOR(64) ;
afterlinearlayer_value_index1_1_4: BITVECTOR(64) ;
afterlinearlayer_value_index1_2_0: BITVECTOR(64) ;
afterlinearlayer_value_index1_2_1: BITVECTOR(64) ;
afterlinearlayer_value_index1_2_2: BITVECTOR(64) ;
afterlinearlayer_value_index1_2_3: BITVECTOR(64) ;
afterlinearlayer_value_index1_2_4: BITVECTOR(64) ;
afterlinearlayer_value_index1_3_0: BITVECTOR(64) ;
afterlinearlayer_value_index1_3_1: BITVECTOR(64) ;
afterlinearlayer_value_index1_3_2: BITVECTOR(64) ;
afterlinearlayer_value_index1_3_3: BITVECTOR(64) ;
afterlinearlayer_value_index1_3_4: BITVECTOR(64) ;

ASSERT( (index1_0[1:0] = 0bin00) => (afterxor_value_index1_0_0[31:0] = BVXOR(c_value_index1_0_0[31:0],x_value_0)) ) ;
ASSERT( (index1_0[1:0] = 0bin01) => (afterxor_value_index1_0_0[31:0] = BVXOR(c_value_index1_0_0[31:0],x_value_1)) ) ;
ASSERT( (index1_0[1:0] = 0bin10) => (afterxor_value_index1_0_0[31:0] = BVXOR(c_value_index1_0_0[31:0],x_value_2)) ) ;
ASSERT( (index1_0[1:0] = 0bin11) => (afterxor_value_index1_0_0[31:0] = BVXOR(c_value_index1_0_0[31:0],x_value_3)) ) ;
ASSERT( (index1_0[3:2] = 0bin00) => (afterxor_value_index1_0_1[31:0] = BVXOR(c_value_index1_0_1[31:0],x_value_0)) ) ;
ASSERT( (index1_0[3:2] = 0bin01) => (afterxor_value_index1_0_1[31:0] = BVXOR(c_value_index1_0_1[31:0],x_value_1)) ) ;
ASSERT( (index1_0[3:2] = 0bin10) => (afterxor_value_index1_0_1[31:0] = BVXOR(c_value_index1_0_1[31:0],x_value_2)) ) ;
ASSERT( (index1_0[3:2] = 0bin11) => (afterxor_value_index1_0_1[31:0] = BVXOR(c_value_index1_0_1[31:0],x_value_3)) ) ;
ASSERT( (index1_0[5:4] = 0bin00) => (afterxor_value_index1_0_2[31:0] = BVXOR(c_value_index1_0_2[31:0],x_value_0)) ) ;
ASSERT( (index1_0[5:4] = 0bin01) => (afterxor_value_index1_0_2[31:0] = BVXOR(c_value_index1_0_2[31:0],x_value_1)) ) ;
ASSERT( (index1_0[5:4] = 0bin10) => (afterxor_value_index1_0_2[31:0] = BVXOR(c_value_index1_0_2[31:0],x_value_2)) ) ;
ASSERT( (index1_0[5:4] = 0bin11) => (afterxor_value_index1_0_2[31:0] = BVXOR(c_value_index1_0_2[31:0],x_value_3)) ) ;
ASSERT( (index1_0[7:6] = 0bin00) => (afterxor_value_index1_0_3[31:0] = BVXOR(c_value_index1_0_3[31:0],x_value_0)) ) ;
ASSERT( (index1_0[7:6] = 0bin01) => (afterxor_value_index1_0_3[31:0] = BVXOR(c_value_index1_0_3[31:0],x_value_1)) ) ;
ASSERT( (index1_0[7:6] = 0bin10) => (afterxor_value_index1_0_3[31:0] = BVXOR(c_value_index1_0_3[31:0],x_value_2)) ) ;
ASSERT( (index1_0[7:6] = 0bin11) => (afterxor_value_index1_0_3[31:0] = BVXOR(c_value_index1_0_3[31:0],x_value_3)) ) ;
ASSERT( (index1_0[9:8] = 0bin00) => (afterxor_value_index1_0_4[31:0] = BVXOR(c_value_index1_0_4[31:0],x_value_0)) ) ;
ASSERT( (index1_0[9:8] = 0bin01) => (afterxor_value_index1_0_4[31:0] = BVXOR(c_value_index1_0_4[31:0],x_value_1)) ) ;
ASSERT( (index1_0[9:8] = 0bin10) => (afterxor_value_index1_0_4[31:0] = BVXOR(c_value_index1_0_4[31:0],x_value_2)) ) ;
ASSERT( (index1_0[9:8] = 0bin11) => (afterxor_value_index1_0_4[31:0] = BVXOR(c_value_index1_0_4[31:0],x_value_3)) ) ;
ASSERT( (index1_1[1:0] = 0bin00) => (afterxor_value_index1_1_0[31:0] = BVXOR(c_value_index1_1_0[31:0],x_value_0)) ) ;
ASSERT( (index1_1[1:0] = 0bin01) => (afterxor_value_index1_1_0[31:0] = BVXOR(c_value_index1_1_0[31:0],x_value_1)) ) ;
ASSERT( (index1_1[1:0] = 0bin10) => (afterxor_value_index1_1_0[31:0] = BVXOR(c_value_index1_1_0[31:0],x_value_2)) ) ;
ASSERT( (index1_1[1:0] = 0bin11) => (afterxor_value_index1_1_0[31:0] = BVXOR(c_value_index1_1_0[31:0],x_value_3)) ) ;
ASSERT( (index1_1[3:2] = 0bin00) => (afterxor_value_index1_1_1[31:0] = BVXOR(c_value_index1_1_1[31:0],x_value_0)) ) ;
ASSERT( (index1_1[3:2] = 0bin01) => (afterxor_value_index1_1_1[31:0] = BVXOR(c_value_index1_1_1[31:0],x_value_1)) ) ;
ASSERT( (index1_1[3:2] = 0bin10) => (afterxor_value_index1_1_1[31:0] = BVXOR(c_value_index1_1_1[31:0],x_value_2)) ) ;
ASSERT( (index1_1[3:2] = 0bin11) => (afterxor_value_index1_1_1[31:0] = BVXOR(c_value_index1_1_1[31:0],x_value_3)) ) ;
ASSERT( (index1_1[5:4] = 0bin00) => (afterxor_value_index1_1_2[31:0] = BVXOR(c_value_index1_1_2[31:0],x_value_0)) ) ;
ASSERT( (index1_1[5:4] = 0bin01) => (afterxor_value_index1_1_2[31:0] = BVXOR(c_value_index1_1_2[31:0],x_value_1)) ) ;
ASSERT( (index1_1[5:4] = 0bin10) => (afterxor_value_index1_1_2[31:0] = BVXOR(c_value_index1_1_2[31:0],x_value_2)) ) ;
ASSERT( (index1_1[5:4] = 0bin11) => (afterxor_value_index1_1_2[31:0] = BVXOR(c_value_index1_1_2[31:0],x_value_3)) ) ;
ASSERT( (index1_1[7:6] = 0bin00) => (afterxor_value_index1_1_3[31:0] = BVXOR(c_value_index1_1_3[31:0],x_value_0)) ) ;
ASSERT( (index1_1[7:6] = 0bin01) => (afterxor_value_index1_1_3[31:0] = BVXOR(c_value_index1_1_3[31:0],x_value_1)) ) ;
ASSERT( (index1_1[7:6] = 0bin10) => (afterxor_value_index1_1_3[31:0] = BVXOR(c_value_index1_1_3[31:0],x_value_2)) ) ;
ASSERT( (index1_1[7:6] = 0bin11) => (afterxor_value_index1_1_3[31:0] = BVXOR(c_value_index1_1_3[31:0],x_value_3)) ) ;
ASSERT( (index1_1[9:8] = 0bin00) => (afterxor_value_index1_1_4[31:0] = BVXOR(c_value_index1_1_4[31:0],x_value_0)) ) ;
ASSERT( (index1_1[9:8] = 0bin01) => (afterxor_value_index1_1_4[31:0] = BVXOR(c_value_index1_1_4[31:0],x_value_1)) ) ;
ASSERT( (index1_1[9:8] = 0bin10) => (afterxor_value_index1_1_4[31:0] = BVXOR(c_value_index1_1_4[31:0],x_value_2)) ) ;
ASSERT( (index1_1[9:8] = 0bin11) => (afterxor_value_index1_1_4[31:0] = BVXOR(c_value_index1_1_4[31:0],x_value_3)) ) ;
ASSERT( (index1_2[1:0] = 0bin00) => (afterxor_value_index1_2_0[31:0] = BVXOR(c_value_index1_2_0[31:0],x_value_0)) ) ;
ASSERT( (index1_2[1:0] = 0bin01) => (afterxor_value_index1_2_0[31:0] = BVXOR(c_value_index1_2_0[31:0],x_value_1)) ) ;
ASSERT( (index1_2[1:0] = 0bin10) => (afterxor_value_index1_2_0[31:0] = BVXOR(c_value_index1_2_0[31:0],x_value_2)) ) ;
ASSERT( (index1_2[1:0] = 0bin11) => (afterxor_value_index1_2_0[31:0] = BVXOR(c_value_index1_2_0[31:0],x_value_3)) ) ;
ASSERT( (index1_2[3:2] = 0bin00) => (afterxor_value_index1_2_1[31:0] = BVXOR(c_value_index1_2_1[31:0],x_value_0)) ) ;
ASSERT( (index1_2[3:2] = 0bin01) => (afterxor_value_index1_2_1[31:0] = BVXOR(c_value_index1_2_1[31:0],x_value_1)) ) ;
ASSERT( (index1_2[3:2] = 0bin10) => (afterxor_value_index1_2_1[31:0] = BVXOR(c_value_index1_2_1[31:0],x_value_2)) ) ;
ASSERT( (index1_2[3:2] = 0bin11) => (afterxor_value_index1_2_1[31:0] = BVXOR(c_value_index1_2_1[31:0],x_value_3)) ) ;
ASSERT( (index1_2[5:4] = 0bin00) => (afterxor_value_index1_2_2[31:0] = BVXOR(c_value_index1_2_2[31:0],x_value_0)) ) ;
ASSERT( (index1_2[5:4] = 0bin01) => (afterxor_value_index1_2_2[31:0] = BVXOR(c_value_index1_2_2[31:0],x_value_1)) ) ;
ASSERT( (index1_2[5:4] = 0bin10) => (afterxor_value_index1_2_2[31:0] = BVXOR(c_value_index1_2_2[31:0],x_value_2)) ) ;
ASSERT( (index1_2[5:4] = 0bin11) => (afterxor_value_index1_2_2[31:0] = BVXOR(c_value_index1_2_2[31:0],x_value_3)) ) ;
ASSERT( (index1_2[7:6] = 0bin00) => (afterxor_value_index1_2_3[31:0] = BVXOR(c_value_index1_2_3[31:0],x_value_0)) ) ;
ASSERT( (index1_2[7:6] = 0bin01) => (afterxor_value_index1_2_3[31:0] = BVXOR(c_value_index1_2_3[31:0],x_value_1)) ) ;
ASSERT( (index1_2[7:6] = 0bin10) => (afterxor_value_index1_2_3[31:0] = BVXOR(c_value_index1_2_3[31:0],x_value_2)) ) ;
ASSERT( (index1_2[7:6] = 0bin11) => (afterxor_value_index1_2_3[31:0] = BVXOR(c_value_index1_2_3[31:0],x_value_3)) ) ;
ASSERT( (index1_2[9:8] = 0bin00) => (afterxor_value_index1_2_4[31:0] = BVXOR(c_value_index1_2_4[31:0],x_value_0)) ) ;
ASSERT( (index1_2[9:8] = 0bin01) => (afterxor_value_index1_2_4[31:0] = BVXOR(c_value_index1_2_4[31:0],x_value_1)) ) ;
ASSERT( (index1_2[9:8] = 0bin10) => (afterxor_value_index1_2_4[31:0] = BVXOR(c_value_index1_2_4[31:0],x_value_2)) ) ;
ASSERT( (index1_2[9:8] = 0bin11) => (afterxor_value_index1_2_4[31:0] = BVXOR(c_value_index1_2_4[31:0],x_value_3)) ) ;
ASSERT( (index1_3[1:0] = 0bin00) => (afterxor_value_index1_3_0[31:0] = BVXOR(c_value_index1_3_0[31:0],x_value_0)) ) ;
ASSERT( (index1_3[1:0] = 0bin01) => (afterxor_value_index1_3_0[31:0] = BVXOR(c_value_index1_3_0[31:0],x_value_1)) ) ;
ASSERT( (index1_3[1:0] = 0bin10) => (afterxor_value_index1_3_0[31:0] = BVXOR(c_value_index1_3_0[31:0],x_value_2)) ) ;
ASSERT( (index1_3[1:0] = 0bin11) => (afterxor_value_index1_3_0[31:0] = BVXOR(c_value_index1_3_0[31:0],x_value_3)) ) ;
ASSERT( (index1_3[3:2] = 0bin00) => (afterxor_value_index1_3_1[31:0] = BVXOR(c_value_index1_3_1[31:0],x_value_0)) ) ;
ASSERT( (index1_3[3:2] = 0bin01) => (afterxor_value_index1_3_1[31:0] = BVXOR(c_value_index1_3_1[31:0],x_value_1)) ) ;
ASSERT( (index1_3[3:2] = 0bin10) => (afterxor_value_index1_3_1[31:0] = BVXOR(c_value_index1_3_1[31:0],x_value_2)) ) ;
ASSERT( (index1_3[3:2] = 0bin11) => (afterxor_value_index1_3_1[31:0] = BVXOR(c_value_index1_3_1[31:0],x_value_3)) ) ;
ASSERT( (index1_3[5:4] = 0bin00) => (afterxor_value_index1_3_2[31:0] = BVXOR(c_value_index1_3_2[31:0],x_value_0)) ) ;
ASSERT( (index1_3[5:4] = 0bin01) => (afterxor_value_index1_3_2[31:0] = BVXOR(c_value_index1_3_2[31:0],x_value_1)) ) ;
ASSERT( (index1_3[5:4] = 0bin10) => (afterxor_value_index1_3_2[31:0] = BVXOR(c_value_index1_3_2[31:0],x_value_2)) ) ;
ASSERT( (index1_3[5:4] = 0bin11) => (afterxor_value_index1_3_2[31:0] = BVXOR(c_value_index1_3_2[31:0],x_value_3)) ) ;
ASSERT( (index1_3[7:6] = 0bin00) => (afterxor_value_index1_3_3[31:0] = BVXOR(c_value_index1_3_3[31:0],x_value_0)) ) ;
ASSERT( (index1_3[7:6] = 0bin01) => (afterxor_value_index1_3_3[31:0] = BVXOR(c_value_index1_3_3[31:0],x_value_1)) ) ;
ASSERT( (index1_3[7:6] = 0bin10) => (afterxor_value_index1_3_3[31:0] = BVXOR(c_value_index1_3_3[31:0],x_value_2)) ) ;
ASSERT( (index1_3[7:6] = 0bin11) => (afterxor_value_index1_3_3[31:0] = BVXOR(c_value_index1_3_3[31:0],x_value_3)) ) ;
ASSERT( (index1_3[9:8] = 0bin00) => (afterxor_value_index1_3_4[31:0] = BVXOR(c_value_index1_3_4[31:0],x_value_0)) ) ;
ASSERT( (index1_3[9:8] = 0bin01) => (afterxor_value_index1_3_4[31:0] = BVXOR(c_value_index1_3_4[31:0],x_value_1)) ) ;
ASSERT( (index1_3[9:8] = 0bin10) => (afterxor_value_index1_3_4[31:0] = BVXOR(c_value_index1_3_4[31:0],x_value_2)) ) ;
ASSERT( (index1_3[9:8] = 0bin11) => (afterxor_value_index1_3_4[31:0] = BVXOR(c_value_index1_3_4[31:0],x_value_3)) ) ;
ASSERT( (index1_4[1:0] = 0bin00) => (afterxor_value_index1_4_0[31:0] = BVXOR(c_value_index1_4_0[31:0],x_value_0)) ) ;
ASSERT( (index1_4[1:0] = 0bin01) => (afterxor_value_index1_4_0[31:0] = BVXOR(c_value_index1_4_0[31:0],x_value_1)) ) ;
ASSERT( (index1_4[1:0] = 0bin10) => (afterxor_value_index1_4_0[31:0] = BVXOR(c_value_index1_4_0[31:0],x_value_2)) ) ;
ASSERT( (index1_4[1:0] = 0bin11) => (afterxor_value_index1_4_0[31:0] = BVXOR(c_value_index1_4_0[31:0],x_value_3)) ) ;
ASSERT( (index1_4[3:2] = 0bin00) => (afterxor_value_index1_4_1[31:0] = BVXOR(c_value_index1_4_1[31:0],x_value_0)) ) ;
ASSERT( (index1_4[3:2] = 0bin01) => (afterxor_value_index1_4_1[31:0] = BVXOR(c_value_index1_4_1[31:0],x_value_1)) ) ;
ASSERT( (index1_4[3:2] = 0bin10) => (afterxor_value_index1_4_1[31:0] = BVXOR(c_value_index1_4_1[31:0],x_value_2)) ) ;
ASSERT( (index1_4[3:2] = 0bin11) => (afterxor_value_index1_4_1[31:0] = BVXOR(c_value_index1_4_1[31:0],x_value_3)) ) ;
ASSERT( (index1_4[5:4] = 0bin00) => (afterxor_value_index1_4_2[31:0] = BVXOR(c_value_index1_4_2[31:0],x_value_0)) ) ;
ASSERT( (index1_4[5:4] = 0bin01) => (afterxor_value_index1_4_2[31:0] = BVXOR(c_value_index1_4_2[31:0],x_value_1)) ) ;
ASSERT( (index1_4[5:4] = 0bin10) => (afterxor_value_index1_4_2[31:0] = BVXOR(c_value_index1_4_2[31:0],x_value_2)) ) ;
ASSERT( (index1_4[5:4] = 0bin11) => (afterxor_value_index1_4_2[31:0] = BVXOR(c_value_index1_4_2[31:0],x_value_3)) ) ;
ASSERT( (index1_4[7:6] = 0bin00) => (afterxor_value_index1_4_3[31:0] = BVXOR(c_value_index1_4_3[31:0],x_value_0)) ) ;
ASSERT( (index1_4[7:6] = 0bin01) => (afterxor_value_index1_4_3[31:0] = BVXOR(c_value_index1_4_3[31:0],x_value_1)) ) ;
ASSERT( (index1_4[7:6] = 0bin10) => (afterxor_value_index1_4_3[31:0] = BVXOR(c_value_index1_4_3[31:0],x_value_2)) ) ;
ASSERT( (index1_4[7:6] = 0bin11) => (afterxor_value_index1_4_3[31:0] = BVXOR(c_value_index1_4_3[31:0],x_value_3)) ) ;
ASSERT( (index1_4[9:8] = 0bin00) => (afterxor_value_index1_4_4[31:0] = BVXOR(c_value_index1_4_4[31:0],x_value_0)) ) ;
ASSERT( (index1_4[9:8] = 0bin01) => (afterxor_value_index1_4_4[31:0] = BVXOR(c_value_index1_4_4[31:0],x_value_1)) ) ;
ASSERT( (index1_4[9:8] = 0bin10) => (afterxor_value_index1_4_4[31:0] = BVXOR(c_value_index1_4_4[31:0],x_value_2)) ) ;
ASSERT( (index1_4[9:8] = 0bin11) => (afterxor_value_index1_4_4[31:0] = BVXOR(c_value_index1_4_4[31:0],x_value_3)) ) ;

ASSERT( afterxor_value_index1_0_0[63:32] = c_value_index1_0_0[63:32] ) ;
ASSERT( afterxor_value_index1_0_1[63:32] = c_value_index1_0_1[63:32] ) ;
ASSERT( afterxor_value_index1_0_2[63:32] = c_value_index1_0_2[63:32] ) ;
ASSERT( afterxor_value_index1_0_3[63:32] = c_value_index1_0_3[63:32] ) ;
ASSERT( afterxor_value_index1_0_4[63:32] = c_value_index1_0_4[63:32] ) ;
ASSERT( afterxor_value_index1_1_0[63:32] = c_value_index1_1_0[63:32] ) ;
ASSERT( afterxor_value_index1_1_1[63:32] = c_value_index1_1_1[63:32] ) ;
ASSERT( afterxor_value_index1_1_2[63:32] = c_value_index1_1_2[63:32] ) ;
ASSERT( afterxor_value_index1_1_3[63:32] = c_value_index1_1_3[63:32] ) ;
ASSERT( afterxor_value_index1_1_4[63:32] = c_value_index1_1_4[63:32] ) ;
ASSERT( afterxor_value_index1_2_0[63:32] = c_value_index1_2_0[63:32] ) ;
ASSERT( afterxor_value_index1_2_1[63:32] = c_value_index1_2_1[63:32] ) ;
ASSERT( afterxor_value_index1_2_2[63:32] = c_value_index1_2_2[63:32] ) ;
ASSERT( afterxor_value_index1_2_3[63:32] = c_value_index1_2_3[63:32] ) ;
ASSERT( afterxor_value_index1_2_4[63:32] = c_value_index1_2_4[63:32] ) ;
ASSERT( afterxor_value_index1_3_0[63:32] = c_value_index1_3_0[63:32] ) ;
ASSERT( afterxor_value_index1_3_1[63:32] = c_value_index1_3_1[63:32] ) ;
ASSERT( afterxor_value_index1_3_2[63:32] = c_value_index1_3_2[63:32] ) ;
ASSERT( afterxor_value_index1_3_3[63:32] = c_value_index1_3_3[63:32] ) ;
ASSERT( afterxor_value_index1_3_4[63:32] = c_value_index1_3_4[63:32] ) ;
ASSERT( afterxor_value_index1_4_0[63:32] = c_value_index1_4_0[63:32] ) ;
ASSERT( afterxor_value_index1_4_1[63:32] = c_value_index1_4_1[63:32] ) ;
ASSERT( afterxor_value_index1_4_2[63:32] = c_value_index1_4_2[63:32] ) ;
ASSERT( afterxor_value_index1_4_3[63:32] = c_value_index1_4_3[63:32] ) ;
ASSERT( afterxor_value_index1_4_4[63:32] = c_value_index1_4_4[63:32] ) ;

ASSERT( middlesbox_1_value_index1_0_0 = BVXOR(afterxor_value_index1_0_0,afterxor_value_index1_0_4) ) ;
ASSERT( middlesbox_1_value_index1_0_1 = afterxor_value_index1_0_1 ) ;
ASSERT( middlesbox_1_value_index1_0_2 = BVXOR(afterxor_value_index1_0_2,afterxor_value_index1_0_1) ) ;
ASSERT( middlesbox_1_value_index1_0_3 = afterxor_value_index1_0_3 ) ;
ASSERT( middlesbox_1_value_index1_0_4 = BVXOR(afterxor_value_index1_0_4,afterxor_value_index1_0_3) ) ;
ASSERT( middlesbox_1_value_index1_1_0 = BVXOR(afterxor_value_index1_1_0,afterxor_value_index1_1_4) ) ;
ASSERT( middlesbox_1_value_index1_1_1 = afterxor_value_index1_1_1 ) ;
ASSERT( middlesbox_1_value_index1_1_2 = BVXOR(afterxor_value_index1_1_2,afterxor_value_index1_1_1) ) ;
ASSERT( middlesbox_1_value_index1_1_3 = afterxor_value_index1_1_3 ) ;
ASSERT( middlesbox_1_value_index1_1_4 = BVXOR(afterxor_value_index1_1_4,afterxor_value_index1_1_3) ) ;
ASSERT( middlesbox_1_value_index1_2_0 = BVXOR(afterxor_value_index1_2_0,afterxor_value_index1_2_4) ) ;
ASSERT( middlesbox_1_value_index1_2_1 = afterxor_value_index1_2_1 ) ;
ASSERT( middlesbox_1_value_index1_2_2 = BVXOR(afterxor_value_index1_2_2,afterxor_value_index1_2_1) ) ;
ASSERT( middlesbox_1_value_index1_2_3 = afterxor_value_index1_2_3 ) ;
ASSERT( middlesbox_1_value_index1_2_4 = BVXOR(afterxor_value_index1_2_4,afterxor_value_index1_2_3) ) ;
ASSERT( middlesbox_1_value_index1_3_0 = BVXOR(afterxor_value_index1_3_0,afterxor_value_index1_3_4) ) ;
ASSERT( middlesbox_1_value_index1_3_1 = afterxor_value_index1_3_1 ) ;
ASSERT( middlesbox_1_value_index1_3_2 = BVXOR(afterxor_value_index1_3_2,afterxor_value_index1_3_1) ) ;
ASSERT( middlesbox_1_value_index1_3_3 = afterxor_value_index1_3_3 ) ;
ASSERT( middlesbox_1_value_index1_3_4 = BVXOR(afterxor_value_index1_3_4,afterxor_value_index1_3_3) ) ;

ASSERT( middlesbox_2_value_index1_0_0 = (~middlesbox_1_value_index1_0_0) & middlesbox_1_value_index1_0_1 ) ;
ASSERT( middlesbox_2_value_index1_0_1 = (~middlesbox_1_value_index1_0_1) & middlesbox_1_value_index1_0_2 ) ;
ASSERT( middlesbox_2_value_index1_0_2 = (~middlesbox_1_value_index1_0_2) & middlesbox_1_value_index1_0_3 ) ;
ASSERT( middlesbox_2_value_index1_0_3 = (~middlesbox_1_value_index1_0_3) & middlesbox_1_value_index1_0_4 ) ;
ASSERT( middlesbox_2_value_index1_0_4 = (~middlesbox_1_value_index1_0_4) & middlesbox_1_value_index1_0_0 ) ;
ASSERT( middlesbox_2_value_index1_1_0 = (~middlesbox_1_value_index1_1_0) & middlesbox_1_value_index1_1_1 ) ;
ASSERT( middlesbox_2_value_index1_1_1 = (~middlesbox_1_value_index1_1_1) & middlesbox_1_value_index1_1_2 ) ;
ASSERT( middlesbox_2_value_index1_1_2 = (~middlesbox_1_value_index1_1_2) & middlesbox_1_value_index1_1_3 ) ;
ASSERT( middlesbox_2_value_index1_1_3 = (~middlesbox_1_value_index1_1_3) & middlesbox_1_value_index1_1_4 ) ;
ASSERT( middlesbox_2_value_index1_1_4 = (~middlesbox_1_value_index1_1_4) & middlesbox_1_value_index1_1_0 ) ;
ASSERT( middlesbox_2_value_index1_2_0 = (~middlesbox_1_value_index1_2_0) & middlesbox_1_value_index1_2_1 ) ;
ASSERT( middlesbox_2_value_index1_2_1 = (~middlesbox_1_value_index1_2_1) & middlesbox_1_value_index1_2_2 ) ;
ASSERT( middlesbox_2_value_index1_2_2 = (~middlesbox_1_value_index1_2_2) & middlesbox_1_value_index1_2_3 ) ;
ASSERT( middlesbox_2_value_index1_2_3 = (~middlesbox_1_value_index1_2_3) & middlesbox_1_value_index1_2_4 ) ;
ASSERT( middlesbox_2_value_index1_2_4 = (~middlesbox_1_value_index1_2_4) & middlesbox_1_value_index1_2_0 ) ;
ASSERT( middlesbox_2_value_index1_3_0 = (~middlesbox_1_value_index1_3_0) & middlesbox_1_value_index1_3_1 ) ;
ASSERT( middlesbox_2_value_index1_3_1 = (~middlesbox_1_value_index1_3_1) & middlesbox_1_value_index1_3_2 ) ;
ASSERT( middlesbox_2_value_index1_3_2 = (~middlesbox_1_value_index1_3_2) & middlesbox_1_value_index1_3_3 ) ;
ASSERT( middlesbox_2_value_index1_3_3 = (~middlesbox_1_value_index1_3_3) & middlesbox_1_value_index1_3_4 ) ;
ASSERT( middlesbox_2_value_index1_3_4 = (~middlesbox_1_value_index1_3_4) & middlesbox_1_value_index1_3_0 ) ;

ASSERT( middlesbox_3_value_index1_0_0 = BVXOR(middlesbox_1_value_index1_0_0,middlesbox_2_value_index1_0_1) ) ;
ASSERT( middlesbox_3_value_index1_0_1 = BVXOR(middlesbox_1_value_index1_0_1,middlesbox_2_value_index1_0_2) ) ;
ASSERT( middlesbox_3_value_index1_0_2 = BVXOR(middlesbox_1_value_index1_0_2,middlesbox_2_value_index1_0_3) ) ;
ASSERT( middlesbox_3_value_index1_0_3 = BVXOR(middlesbox_1_value_index1_0_3,middlesbox_2_value_index1_0_4) ) ;
ASSERT( middlesbox_3_value_index1_0_4 = BVXOR(middlesbox_1_value_index1_0_4,middlesbox_2_value_index1_0_0) ) ;
ASSERT( middlesbox_3_value_index1_1_0 = BVXOR(middlesbox_1_value_index1_1_0,middlesbox_2_value_index1_1_1) ) ;
ASSERT( middlesbox_3_value_index1_1_1 = BVXOR(middlesbox_1_value_index1_1_1,middlesbox_2_value_index1_1_2) ) ;
ASSERT( middlesbox_3_value_index1_1_2 = BVXOR(middlesbox_1_value_index1_1_2,middlesbox_2_value_index1_1_3) ) ;
ASSERT( middlesbox_3_value_index1_1_3 = BVXOR(middlesbox_1_value_index1_1_3,middlesbox_2_value_index1_1_4) ) ;
ASSERT( middlesbox_3_value_index1_1_4 = BVXOR(middlesbox_1_value_index1_1_4,middlesbox_2_value_index1_1_0) ) ;
ASSERT( middlesbox_3_value_index1_2_0 = BVXOR(middlesbox_1_value_index1_2_0,middlesbox_2_value_index1_2_1) ) ;
ASSERT( middlesbox_3_value_index1_2_1 = BVXOR(middlesbox_1_value_index1_2_1,middlesbox_2_value_index1_2_2) ) ;
ASSERT( middlesbox_3_value_index1_2_2 = BVXOR(middlesbox_1_value_index1_2_2,middlesbox_2_value_index1_2_3) ) ;
ASSERT( middlesbox_3_value_index1_2_3 = BVXOR(middlesbox_1_value_index1_2_3,middlesbox_2_value_index1_2_4) ) ;
ASSERT( middlesbox_3_value_index1_2_4 = BVXOR(middlesbox_1_value_index1_2_4,middlesbox_2_value_index1_2_0) ) ;
ASSERT( middlesbox_3_value_index1_3_0 = BVXOR(middlesbox_1_value_index1_3_0,middlesbox_2_value_index1_3_1) ) ;
ASSERT( middlesbox_3_value_index1_3_1 = BVXOR(middlesbox_1_value_index1_3_1,middlesbox_2_value_index1_3_2) ) ;
ASSERT( middlesbox_3_value_index1_3_2 = BVXOR(middlesbox_1_value_index1_3_2,middlesbox_2_value_index1_3_3) ) ;
ASSERT( middlesbox_3_value_index1_3_3 = BVXOR(middlesbox_1_value_index1_3_3,middlesbox_2_value_index1_3_4) ) ;
ASSERT( middlesbox_3_value_index1_3_4 = BVXOR(middlesbox_1_value_index1_3_4,middlesbox_2_value_index1_3_0) ) ;

ASSERT( middlesbox_4_value_index1_0_0 = BVXOR(middlesbox_3_value_index1_0_0,middlesbox_3_value_index1_0_4) ) ;
ASSERT( middlesbox_4_value_index1_0_1 = BVXOR(middlesbox_3_value_index1_0_0,middlesbox_3_value_index1_0_1) ) ;
ASSERT( middlesbox_4_value_index1_0_2 = middlesbox_3_value_index1_0_2 ) ;
ASSERT( middlesbox_4_value_index1_0_3 = BVXOR(middlesbox_3_value_index1_0_2,middlesbox_3_value_index1_0_3) ) ;
ASSERT( middlesbox_4_value_index1_0_4 = middlesbox_3_value_index1_0_4 ) ;
ASSERT( middlesbox_4_value_index1_1_0 = BVXOR(middlesbox_3_value_index1_1_0,middlesbox_3_value_index1_1_4) ) ;
ASSERT( middlesbox_4_value_index1_1_1 = BVXOR(middlesbox_3_value_index1_1_0,middlesbox_3_value_index1_1_1) ) ;
ASSERT( middlesbox_4_value_index1_1_2 = middlesbox_3_value_index1_1_2 ) ;
ASSERT( middlesbox_4_value_index1_1_3 = BVXOR(middlesbox_3_value_index1_1_2,middlesbox_3_value_index1_1_3) ) ;
ASSERT( middlesbox_4_value_index1_1_4 = middlesbox_3_value_index1_1_4 ) ;
ASSERT( middlesbox_4_value_index1_2_0 = BVXOR(middlesbox_3_value_index1_2_0,middlesbox_3_value_index1_2_4) ) ;
ASSERT( middlesbox_4_value_index1_2_1 = BVXOR(middlesbox_3_value_index1_2_0,middlesbox_3_value_index1_2_1) ) ;
ASSERT( middlesbox_4_value_index1_2_2 = middlesbox_3_value_index1_2_2 ) ;
ASSERT( middlesbox_4_value_index1_2_3 = BVXOR(middlesbox_3_value_index1_2_2,middlesbox_3_value_index1_2_3) ) ;
ASSERT( middlesbox_4_value_index1_2_4 = middlesbox_3_value_index1_2_4 ) ;
ASSERT( middlesbox_4_value_index1_3_0 = BVXOR(middlesbox_3_value_index1_3_0,middlesbox_3_value_index1_3_4) ) ;
ASSERT( middlesbox_4_value_index1_3_1 = BVXOR(middlesbox_3_value_index1_3_0,middlesbox_3_value_index1_3_1) ) ;
ASSERT( middlesbox_4_value_index1_3_2 = middlesbox_3_value_index1_3_2 ) ;
ASSERT( middlesbox_4_value_index1_3_3 = BVXOR(middlesbox_3_value_index1_3_2,middlesbox_3_value_index1_3_3) ) ;
ASSERT( middlesbox_4_value_index1_3_4 = middlesbox_3_value_index1_3_4 ) ;

ASSERT( aftersbox_value_index1_0_0 = middlesbox_4_value_index1_0_0 ) ;
ASSERT( aftersbox_value_index1_0_1 = middlesbox_4_value_index1_0_1 ) ;
ASSERT( aftersbox_value_index1_0_2 = ~middlesbox_4_value_index1_0_2 ) ;
ASSERT( aftersbox_value_index1_0_3 = middlesbox_4_value_index1_0_3 ) ;
ASSERT( aftersbox_value_index1_0_4 = middlesbox_4_value_index1_0_4 ) ;
ASSERT( aftersbox_value_index1_1_0 = middlesbox_4_value_index1_1_0 ) ;
ASSERT( aftersbox_value_index1_1_1 = middlesbox_4_value_index1_1_1 ) ;
ASSERT( aftersbox_value_index1_1_2 = ~middlesbox_4_value_index1_1_2 ) ;
ASSERT( aftersbox_value_index1_1_3 = middlesbox_4_value_index1_1_3 ) ;
ASSERT( aftersbox_value_index1_1_4 = middlesbox_4_value_index1_1_4 ) ;
ASSERT( aftersbox_value_index1_2_0 = middlesbox_4_value_index1_2_0 ) ;
ASSERT( aftersbox_value_index1_2_1 = middlesbox_4_value_index1_2_1 ) ;
ASSERT( aftersbox_value_index1_2_2 = ~middlesbox_4_value_index1_2_2 ) ;
ASSERT( aftersbox_value_index1_2_3 = middlesbox_4_value_index1_2_3 ) ;
ASSERT( aftersbox_value_index1_2_4 = middlesbox_4_value_index1_2_4 ) ;
ASSERT( aftersbox_value_index1_3_0 = middlesbox_4_value_index1_3_0 ) ;
ASSERT( aftersbox_value_index1_3_1 = middlesbox_4_value_index1_3_1 ) ;
ASSERT( aftersbox_value_index1_3_2 = ~middlesbox_4_value_index1_3_2 ) ;
ASSERT( aftersbox_value_index1_3_3 = middlesbox_4_value_index1_3_3 ) ;
ASSERT( aftersbox_value_index1_3_4 = middlesbox_4_value_index1_3_4 ) ;

ASSERT( middlelinearlayer_value_index1_0_0 = BVXOR(aftersbox_value_index1_0_0,aftersbox_value_index1_0_0[9:0]@aftersbox_value_index1_0_0[31:10]@aftersbox_value_index1_0_0[40:32]@aftersbox_value_index1_0_0[63:41]) ) ;
ASSERT( afterlinearlayer_value_index1_0_0 = BVXOR(middlelinearlayer_value_index1_0_0,aftersbox_value_index1_0_0[45:32]@aftersbox_value_index1_0_0[63:46]@aftersbox_value_index1_0_0[13:0]@aftersbox_value_index1_0_0[31:14]) ) ;
ASSERT( middlelinearlayer_value_index1_1_0 = BVXOR(aftersbox_value_index1_1_0,aftersbox_value_index1_1_0[9:0]@aftersbox_value_index1_1_0[31:10]@aftersbox_value_index1_1_0[40:32]@aftersbox_value_index1_1_0[63:41]) ) ;
ASSERT( afterlinearlayer_value_index1_1_0 = BVXOR(middlelinearlayer_value_index1_1_0,aftersbox_value_index1_1_0[45:32]@aftersbox_value_index1_1_0[63:46]@aftersbox_value_index1_1_0[13:0]@aftersbox_value_index1_1_0[31:14]) ) ;
ASSERT( middlelinearlayer_value_index1_2_0 = BVXOR(aftersbox_value_index1_2_0,aftersbox_value_index1_2_0[9:0]@aftersbox_value_index1_2_0[31:10]@aftersbox_value_index1_2_0[40:32]@aftersbox_value_index1_2_0[63:41]) ) ;
ASSERT( afterlinearlayer_value_index1_2_0 = BVXOR(middlelinearlayer_value_index1_2_0,aftersbox_value_index1_2_0[45:32]@aftersbox_value_index1_2_0[63:46]@aftersbox_value_index1_2_0[13:0]@aftersbox_value_index1_2_0[31:14]) ) ;
ASSERT( middlelinearlayer_value_index1_3_0 = BVXOR(aftersbox_value_index1_3_0,aftersbox_value_index1_3_0[9:0]@aftersbox_value_index1_3_0[31:10]@aftersbox_value_index1_3_0[40:32]@aftersbox_value_index1_3_0[63:41]) ) ;
ASSERT( afterlinearlayer_value_index1_3_0 = BVXOR(middlelinearlayer_value_index1_3_0,aftersbox_value_index1_3_0[45:32]@aftersbox_value_index1_3_0[63:46]@aftersbox_value_index1_3_0[13:0]@aftersbox_value_index1_3_0[31:14]) ) ;

ASSERT( middlelinearlayer_value_index1_0_1 = BVXOR(aftersbox_value_index1_0_1,aftersbox_value_index1_0_1[30:0]@aftersbox_value_index1_0_1[31:31]@aftersbox_value_index1_0_1[61:32]@aftersbox_value_index1_0_1[63:62]) ) ;
ASSERT( afterlinearlayer_value_index1_0_1 = BVXOR(middlelinearlayer_value_index1_0_1,aftersbox_value_index1_0_1[50:32]@aftersbox_value_index1_0_1[63:51]@aftersbox_value_index1_0_1[18:0]@aftersbox_value_index1_0_1[31:19]) ) ;
ASSERT( middlelinearlayer_value_index1_1_1 = BVXOR(aftersbox_value_index1_1_1,aftersbox_value_index1_1_1[30:0]@aftersbox_value_index1_1_1[31:31]@aftersbox_value_index1_1_1[61:32]@aftersbox_value_index1_1_1[63:62]) ) ;
ASSERT( afterlinearlayer_value_index1_1_1 = BVXOR(middlelinearlayer_value_index1_1_1,aftersbox_value_index1_1_1[50:32]@aftersbox_value_index1_1_1[63:51]@aftersbox_value_index1_1_1[18:0]@aftersbox_value_index1_1_1[31:19]) ) ;
ASSERT( middlelinearlayer_value_index1_2_1 = BVXOR(aftersbox_value_index1_2_1,aftersbox_value_index1_2_1[30:0]@aftersbox_value_index1_2_1[31:31]@aftersbox_value_index1_2_1[61:32]@aftersbox_value_index1_2_1[63:62]) ) ;
ASSERT( afterlinearlayer_value_index1_2_1 = BVXOR(middlelinearlayer_value_index1_2_1,aftersbox_value_index1_2_1[50:32]@aftersbox_value_index1_2_1[63:51]@aftersbox_value_index1_2_1[18:0]@aftersbox_value_index1_2_1[31:19]) ) ;
ASSERT( middlelinearlayer_value_index1_3_1 = BVXOR(aftersbox_value_index1_3_1,aftersbox_value_index1_3_1[30:0]@aftersbox_value_index1_3_1[31:31]@aftersbox_value_index1_3_1[61:32]@aftersbox_value_index1_3_1[63:62]) ) ;
ASSERT( afterlinearlayer_value_index1_3_1 = BVXOR(middlelinearlayer_value_index1_3_1,aftersbox_value_index1_3_1[50:32]@aftersbox_value_index1_3_1[63:51]@aftersbox_value_index1_3_1[18:0]@aftersbox_value_index1_3_1[31:19]) ) ;

ASSERT( middlelinearlayer_value_index1_0_2 = BVXOR(aftersbox_value_index1_0_2,aftersbox_value_index1_0_2[0:0]@aftersbox_value_index1_0_2[31:1]@aftersbox_value_index1_0_2[63:32]) ) ;
ASSERT( afterlinearlayer_value_index1_0_2 = BVXOR(middlelinearlayer_value_index1_0_2,aftersbox_value_index1_0_2[34:32]@aftersbox_value_index1_0_2[63:35]@aftersbox_value_index1_0_2[2:0]@aftersbox_value_index1_0_2[31:3]) ) ;
ASSERT( middlelinearlayer_value_index1_1_2 = BVXOR(aftersbox_value_index1_1_2,aftersbox_value_index1_1_2[0:0]@aftersbox_value_index1_1_2[31:1]@aftersbox_value_index1_1_2[63:32]) ) ;
ASSERT( afterlinearlayer_value_index1_1_2 = BVXOR(middlelinearlayer_value_index1_1_2,aftersbox_value_index1_1_2[34:32]@aftersbox_value_index1_1_2[63:35]@aftersbox_value_index1_1_2[2:0]@aftersbox_value_index1_1_2[31:3]) ) ;
ASSERT( middlelinearlayer_value_index1_2_2 = BVXOR(aftersbox_value_index1_2_2,aftersbox_value_index1_2_2[0:0]@aftersbox_value_index1_2_2[31:1]@aftersbox_value_index1_2_2[63:32]) ) ;
ASSERT( afterlinearlayer_value_index1_2_2 = BVXOR(middlelinearlayer_value_index1_2_2,aftersbox_value_index1_2_2[34:32]@aftersbox_value_index1_2_2[63:35]@aftersbox_value_index1_2_2[2:0]@aftersbox_value_index1_2_2[31:3]) ) ;
ASSERT( middlelinearlayer_value_index1_3_2 = BVXOR(aftersbox_value_index1_3_2,aftersbox_value_index1_3_2[0:0]@aftersbox_value_index1_3_2[31:1]@aftersbox_value_index1_3_2[63:32]) ) ;
ASSERT( afterlinearlayer_value_index1_3_2 = BVXOR(middlelinearlayer_value_index1_3_2,aftersbox_value_index1_3_2[34:32]@aftersbox_value_index1_3_2[63:35]@aftersbox_value_index1_3_2[2:0]@aftersbox_value_index1_3_2[31:3]) ) ;

ASSERT( middlelinearlayer_value_index1_0_3 = BVXOR(aftersbox_value_index1_0_3,aftersbox_value_index1_0_3[36:32]@aftersbox_value_index1_0_3[63:37]@aftersbox_value_index1_0_3[4:0]@aftersbox_value_index1_0_3[31:5]) ) ;
ASSERT( afterlinearlayer_value_index1_0_3 = BVXOR(middlelinearlayer_value_index1_0_3,aftersbox_value_index1_0_3[8:0]@aftersbox_value_index1_0_3[31:9]@aftersbox_value_index1_0_3[39:32]@aftersbox_value_index1_0_3[63:40]) ) ;
ASSERT( middlelinearlayer_value_index1_1_3 = BVXOR(aftersbox_value_index1_1_3,aftersbox_value_index1_1_3[36:32]@aftersbox_value_index1_1_3[63:37]@aftersbox_value_index1_1_3[4:0]@aftersbox_value_index1_1_3[31:5]) ) ;
ASSERT( afterlinearlayer_value_index1_1_3 = BVXOR(middlelinearlayer_value_index1_1_3,aftersbox_value_index1_1_3[8:0]@aftersbox_value_index1_1_3[31:9]@aftersbox_value_index1_1_3[39:32]@aftersbox_value_index1_1_3[63:40]) ) ;
ASSERT( middlelinearlayer_value_index1_2_3 = BVXOR(aftersbox_value_index1_2_3,aftersbox_value_index1_2_3[36:32]@aftersbox_value_index1_2_3[63:37]@aftersbox_value_index1_2_3[4:0]@aftersbox_value_index1_2_3[31:5]) ) ;
ASSERT( afterlinearlayer_value_index1_2_3 = BVXOR(middlelinearlayer_value_index1_2_3,aftersbox_value_index1_2_3[8:0]@aftersbox_value_index1_2_3[31:9]@aftersbox_value_index1_2_3[39:32]@aftersbox_value_index1_2_3[63:40]) ) ;
ASSERT( middlelinearlayer_value_index1_3_3 = BVXOR(aftersbox_value_index1_3_3,aftersbox_value_index1_3_3[36:32]@aftersbox_value_index1_3_3[63:37]@aftersbox_value_index1_3_3[4:0]@aftersbox_value_index1_3_3[31:5]) ) ;
ASSERT( afterlinearlayer_value_index1_3_3 = BVXOR(middlelinearlayer_value_index1_3_3,aftersbox_value_index1_3_3[8:0]@aftersbox_value_index1_3_3[31:9]@aftersbox_value_index1_3_3[39:32]@aftersbox_value_index1_3_3[63:40]) ) ;

ASSERT( middlelinearlayer_value_index1_0_4 = BVXOR(aftersbox_value_index1_0_4,aftersbox_value_index1_0_4[3:0]@aftersbox_value_index1_0_4[31:4]@aftersbox_value_index1_0_4[34:32]@aftersbox_value_index1_0_4[63:35]) ) ;
ASSERT( afterlinearlayer_value_index1_0_4 = BVXOR(middlelinearlayer_value_index1_0_4,aftersbox_value_index1_0_4[51:32]@aftersbox_value_index1_0_4[63:52]@aftersbox_value_index1_0_4[19:0]@aftersbox_value_index1_0_4[31:20]) ) ;
ASSERT( middlelinearlayer_value_index1_1_4 = BVXOR(aftersbox_value_index1_1_4,aftersbox_value_index1_1_4[3:0]@aftersbox_value_index1_1_4[31:4]@aftersbox_value_index1_1_4[34:32]@aftersbox_value_index1_1_4[63:35]) ) ;
ASSERT( afterlinearlayer_value_index1_1_4 = BVXOR(middlelinearlayer_value_index1_1_4,aftersbox_value_index1_1_4[51:32]@aftersbox_value_index1_1_4[63:52]@aftersbox_value_index1_1_4[19:0]@aftersbox_value_index1_1_4[31:20]) ) ;
ASSERT( middlelinearlayer_value_index1_2_4 = BVXOR(aftersbox_value_index1_2_4,aftersbox_value_index1_2_4[3:0]@aftersbox_value_index1_2_4[31:4]@aftersbox_value_index1_2_4[34:32]@aftersbox_value_index1_2_4[63:35]) ) ;
ASSERT( afterlinearlayer_value_index1_2_4 = BVXOR(middlelinearlayer_value_index1_2_4,aftersbox_value_index1_2_4[51:32]@aftersbox_value_index1_2_4[63:52]@aftersbox_value_index1_2_4[19:0]@aftersbox_value_index1_2_4[31:20]) ) ;
ASSERT( middlelinearlayer_value_index1_3_4 = BVXOR(aftersbox_value_index1_3_4,aftersbox_value_index1_3_4[3:0]@aftersbox_value_index1_3_4[31:4]@aftersbox_value_index1_3_4[34:32]@aftersbox_value_index1_3_4[63:35]) ) ;
ASSERT( afterlinearlayer_value_index1_3_4 = BVXOR(middlelinearlayer_value_index1_3_4,aftersbox_value_index1_3_4[51:32]@aftersbox_value_index1_3_4[63:52]@aftersbox_value_index1_3_4[19:0]@aftersbox_value_index1_3_4[31:20]) ) ;

afterxor_value_index2_0_0: BITVECTOR(64) ;
afterxor_value_index2_0_1: BITVECTOR(64) ;
afterxor_value_index2_0_2: BITVECTOR(64) ;
afterxor_value_index2_0_3: BITVECTOR(64) ;
afterxor_value_index2_0_4: BITVECTOR(64) ;
afterxor_value_index2_1_0: BITVECTOR(64) ;
afterxor_value_index2_1_1: BITVECTOR(64) ;
afterxor_value_index2_1_2: BITVECTOR(64) ;
afterxor_value_index2_1_3: BITVECTOR(64) ;
afterxor_value_index2_1_4: BITVECTOR(64) ;
afterxor_value_index2_2_0: BITVECTOR(64) ;
afterxor_value_index2_2_1: BITVECTOR(64) ;
afterxor_value_index2_2_2: BITVECTOR(64) ;
afterxor_value_index2_2_3: BITVECTOR(64) ;
afterxor_value_index2_2_4: BITVECTOR(64) ;
afterxor_value_index2_3_0: BITVECTOR(64) ;
afterxor_value_index2_3_1: BITVECTOR(64) ;
afterxor_value_index2_3_2: BITVECTOR(64) ;
afterxor_value_index2_3_3: BITVECTOR(64) ;
afterxor_value_index2_3_4: BITVECTOR(64) ;
afterxor_value_index2_4_0: BITVECTOR(64) ;
afterxor_value_index2_4_1: BITVECTOR(64) ;
afterxor_value_index2_4_2: BITVECTOR(64) ;
afterxor_value_index2_4_3: BITVECTOR(64) ;
afterxor_value_index2_4_4: BITVECTOR(64) ;

middlesbox_1_value_index2_0_0: BITVECTOR(64) ;
middlesbox_1_value_index2_0_1: BITVECTOR(64) ;
middlesbox_1_value_index2_0_2: BITVECTOR(64) ;
middlesbox_1_value_index2_0_3: BITVECTOR(64) ;
middlesbox_1_value_index2_0_4: BITVECTOR(64) ;
middlesbox_1_value_index2_1_0: BITVECTOR(64) ;
middlesbox_1_value_index2_1_1: BITVECTOR(64) ;
middlesbox_1_value_index2_1_2: BITVECTOR(64) ;
middlesbox_1_value_index2_1_3: BITVECTOR(64) ;
middlesbox_1_value_index2_1_4: BITVECTOR(64) ;
middlesbox_1_value_index2_2_0: BITVECTOR(64) ;
middlesbox_1_value_index2_2_1: BITVECTOR(64) ;
middlesbox_1_value_index2_2_2: BITVECTOR(64) ;
middlesbox_1_value_index2_2_3: BITVECTOR(64) ;
middlesbox_1_value_index2_2_4: BITVECTOR(64) ;
middlesbox_1_value_index2_3_0: BITVECTOR(64) ;
middlesbox_1_value_index2_3_1: BITVECTOR(64) ;
middlesbox_1_value_index2_3_2: BITVECTOR(64) ;
middlesbox_1_value_index2_3_3: BITVECTOR(64) ;
middlesbox_1_value_index2_3_4: BITVECTOR(64) ;

middlesbox_2_value_index2_0_0: BITVECTOR(64) ;
middlesbox_2_value_index2_0_1: BITVECTOR(64) ;
middlesbox_2_value_index2_0_2: BITVECTOR(64) ;
middlesbox_2_value_index2_0_3: BITVECTOR(64) ;
middlesbox_2_value_index2_0_4: BITVECTOR(64) ;
middlesbox_2_value_index2_1_0: BITVECTOR(64) ;
middlesbox_2_value_index2_1_1: BITVECTOR(64) ;
middlesbox_2_value_index2_1_2: BITVECTOR(64) ;
middlesbox_2_value_index2_1_3: BITVECTOR(64) ;
middlesbox_2_value_index2_1_4: BITVECTOR(64) ;
middlesbox_2_value_index2_2_0: BITVECTOR(64) ;
middlesbox_2_value_index2_2_1: BITVECTOR(64) ;
middlesbox_2_value_index2_2_2: BITVECTOR(64) ;
middlesbox_2_value_index2_2_3: BITVECTOR(64) ;
middlesbox_2_value_index2_2_4: BITVECTOR(64) ;
middlesbox_2_value_index2_3_0: BITVECTOR(64) ;
middlesbox_2_value_index2_3_1: BITVECTOR(64) ;
middlesbox_2_value_index2_3_2: BITVECTOR(64) ;
middlesbox_2_value_index2_3_3: BITVECTOR(64) ;
middlesbox_2_value_index2_3_4: BITVECTOR(64) ;

middlesbox_3_value_index2_0_0: BITVECTOR(64) ;
middlesbox_3_value_index2_0_1: BITVECTOR(64) ;
middlesbox_3_value_index2_0_2: BITVECTOR(64) ;
middlesbox_3_value_index2_0_3: BITVECTOR(64) ;
middlesbox_3_value_index2_0_4: BITVECTOR(64) ;
middlesbox_3_value_index2_1_0: BITVECTOR(64) ;
middlesbox_3_value_index2_1_1: BITVECTOR(64) ;
middlesbox_3_value_index2_1_2: BITVECTOR(64) ;
middlesbox_3_value_index2_1_3: BITVECTOR(64) ;
middlesbox_3_value_index2_1_4: BITVECTOR(64) ;
middlesbox_3_value_index2_2_0: BITVECTOR(64) ;
middlesbox_3_value_index2_2_1: BITVECTOR(64) ;
middlesbox_3_value_index2_2_2: BITVECTOR(64) ;
middlesbox_3_value_index2_2_3: BITVECTOR(64) ;
middlesbox_3_value_index2_2_4: BITVECTOR(64) ;
middlesbox_3_value_index2_3_0: BITVECTOR(64) ;
middlesbox_3_value_index2_3_1: BITVECTOR(64) ;
middlesbox_3_value_index2_3_2: BITVECTOR(64) ;
middlesbox_3_value_index2_3_3: BITVECTOR(64) ;
middlesbox_3_value_index2_3_4: BITVECTOR(64) ;

middlesbox_4_value_index2_0_0: BITVECTOR(64) ;
middlesbox_4_value_index2_0_1: BITVECTOR(64) ;
middlesbox_4_value_index2_0_2: BITVECTOR(64) ;
middlesbox_4_value_index2_0_3: BITVECTOR(64) ;
middlesbox_4_value_index2_0_4: BITVECTOR(64) ;
middlesbox_4_value_index2_1_0: BITVECTOR(64) ;
middlesbox_4_value_index2_1_1: BITVECTOR(64) ;
middlesbox_4_value_index2_1_2: BITVECTOR(64) ;
middlesbox_4_value_index2_1_3: BITVECTOR(64) ;
middlesbox_4_value_index2_1_4: BITVECTOR(64) ;
middlesbox_4_value_index2_2_0: BITVECTOR(64) ;
middlesbox_4_value_index2_2_1: BITVECTOR(64) ;
middlesbox_4_value_index2_2_2: BITVECTOR(64) ;
middlesbox_4_value_index2_2_3: BITVECTOR(64) ;
middlesbox_4_value_index2_2_4: BITVECTOR(64) ;
middlesbox_4_value_index2_3_0: BITVECTOR(64) ;
middlesbox_4_value_index2_3_1: BITVECTOR(64) ;
middlesbox_4_value_index2_3_2: BITVECTOR(64) ;
middlesbox_4_value_index2_3_3: BITVECTOR(64) ;
middlesbox_4_value_index2_3_4: BITVECTOR(64) ;

aftersbox_value_index2_0_0: BITVECTOR(64) ;
aftersbox_value_index2_0_1: BITVECTOR(64) ;
aftersbox_value_index2_0_2: BITVECTOR(64) ;
aftersbox_value_index2_0_3: BITVECTOR(64) ;
aftersbox_value_index2_0_4: BITVECTOR(64) ;
aftersbox_value_index2_1_0: BITVECTOR(64) ;
aftersbox_value_index2_1_1: BITVECTOR(64) ;
aftersbox_value_index2_1_2: BITVECTOR(64) ;
aftersbox_value_index2_1_3: BITVECTOR(64) ;
aftersbox_value_index2_1_4: BITVECTOR(64) ;
aftersbox_value_index2_2_0: BITVECTOR(64) ;
aftersbox_value_index2_2_1: BITVECTOR(64) ;
aftersbox_value_index2_2_2: BITVECTOR(64) ;
aftersbox_value_index2_2_3: BITVECTOR(64) ;
aftersbox_value_index2_2_4: BITVECTOR(64) ;
aftersbox_value_index2_3_0: BITVECTOR(64) ;
aftersbox_value_index2_3_1: BITVECTOR(64) ;
aftersbox_value_index2_3_2: BITVECTOR(64) ;
aftersbox_value_index2_3_3: BITVECTOR(64) ;
aftersbox_value_index2_3_4: BITVECTOR(64) ;

middlelinearlayer_value_index2_0_0: BITVECTOR(64) ;
middlelinearlayer_value_index2_0_1: BITVECTOR(64) ;
middlelinearlayer_value_index2_0_2: BITVECTOR(64) ;
middlelinearlayer_value_index2_0_3: BITVECTOR(64) ;
middlelinearlayer_value_index2_0_4: BITVECTOR(64) ;
middlelinearlayer_value_index2_1_0: BITVECTOR(64) ;
middlelinearlayer_value_index2_1_1: BITVECTOR(64) ;
middlelinearlayer_value_index2_1_2: BITVECTOR(64) ;
middlelinearlayer_value_index2_1_3: BITVECTOR(64) ;
middlelinearlayer_value_index2_1_4: BITVECTOR(64) ;
middlelinearlayer_value_index2_2_0: BITVECTOR(64) ;
middlelinearlayer_value_index2_2_1: BITVECTOR(64) ;
middlelinearlayer_value_index2_2_2: BITVECTOR(64) ;
middlelinearlayer_value_index2_2_3: BITVECTOR(64) ;
middlelinearlayer_value_index2_2_4: BITVECTOR(64) ;
middlelinearlayer_value_index2_3_0: BITVECTOR(64) ;
middlelinearlayer_value_index2_3_1: BITVECTOR(64) ;
middlelinearlayer_value_index2_3_2: BITVECTOR(64) ;
middlelinearlayer_value_index2_3_3: BITVECTOR(64) ;
middlelinearlayer_value_index2_3_4: BITVECTOR(64) ;

afterlinearlayer_value_index2_0_0: BITVECTOR(64) ;
afterlinearlayer_value_index2_0_1: BITVECTOR(64) ;
afterlinearlayer_value_index2_0_2: BITVECTOR(64) ;
afterlinearlayer_value_index2_0_3: BITVECTOR(64) ;
afterlinearlayer_value_index2_0_4: BITVECTOR(64) ;
afterlinearlayer_value_index2_1_0: BITVECTOR(64) ;
afterlinearlayer_value_index2_1_1: BITVECTOR(64) ;
afterlinearlayer_value_index2_1_2: BITVECTOR(64) ;
afterlinearlayer_value_index2_1_3: BITVECTOR(64) ;
afterlinearlayer_value_index2_1_4: BITVECTOR(64) ;
afterlinearlayer_value_index2_2_0: BITVECTOR(64) ;
afterlinearlayer_value_index2_2_1: BITVECTOR(64) ;
afterlinearlayer_value_index2_2_2: BITVECTOR(64) ;
afterlinearlayer_value_index2_2_3: BITVECTOR(64) ;
afterlinearlayer_value_index2_2_4: BITVECTOR(64) ;
afterlinearlayer_value_index2_3_0: BITVECTOR(64) ;
afterlinearlayer_value_index2_3_1: BITVECTOR(64) ;
afterlinearlayer_value_index2_3_2: BITVECTOR(64) ;
afterlinearlayer_value_index2_3_3: BITVECTOR(64) ;
afterlinearlayer_value_index2_3_4: BITVECTOR(64) ;

ASSERT( (index2_0[1:0] = 0bin00) => (afterxor_value_index2_0_0[31:0] = BVXOR(c_value_index2_0_0[31:0],x_value_0)) ) ;
ASSERT( (index2_0[1:0] = 0bin01) => (afterxor_value_index2_0_0[31:0] = BVXOR(c_value_index2_0_0[31:0],x_value_1)) ) ;
ASSERT( (index2_0[1:0] = 0bin10) => (afterxor_value_index2_0_0[31:0] = BVXOR(c_value_index2_0_0[31:0],x_value_2)) ) ;
ASSERT( (index2_0[1:0] = 0bin11) => (afterxor_value_index2_0_0[31:0] = BVXOR(c_value_index2_0_0[31:0],x_value_3)) ) ;
ASSERT( (index2_0[3:2] = 0bin00) => (afterxor_value_index2_0_1[31:0] = BVXOR(c_value_index2_0_1[31:0],x_value_0)) ) ;
ASSERT( (index2_0[3:2] = 0bin01) => (afterxor_value_index2_0_1[31:0] = BVXOR(c_value_index2_0_1[31:0],x_value_1)) ) ;
ASSERT( (index2_0[3:2] = 0bin10) => (afterxor_value_index2_0_1[31:0] = BVXOR(c_value_index2_0_1[31:0],x_value_2)) ) ;
ASSERT( (index2_0[3:2] = 0bin11) => (afterxor_value_index2_0_1[31:0] = BVXOR(c_value_index2_0_1[31:0],x_value_3)) ) ;
ASSERT( (index2_0[5:4] = 0bin00) => (afterxor_value_index2_0_2[31:0] = BVXOR(c_value_index2_0_2[31:0],x_value_0)) ) ;
ASSERT( (index2_0[5:4] = 0bin01) => (afterxor_value_index2_0_2[31:0] = BVXOR(c_value_index2_0_2[31:0],x_value_1)) ) ;
ASSERT( (index2_0[5:4] = 0bin10) => (afterxor_value_index2_0_2[31:0] = BVXOR(c_value_index2_0_2[31:0],x_value_2)) ) ;
ASSERT( (index2_0[5:4] = 0bin11) => (afterxor_value_index2_0_2[31:0] = BVXOR(c_value_index2_0_2[31:0],x_value_3)) ) ;
ASSERT( (index2_0[7:6] = 0bin00) => (afterxor_value_index2_0_3[31:0] = BVXOR(c_value_index2_0_3[31:0],x_value_0)) ) ;
ASSERT( (index2_0[7:6] = 0bin01) => (afterxor_value_index2_0_3[31:0] = BVXOR(c_value_index2_0_3[31:0],x_value_1)) ) ;
ASSERT( (index2_0[7:6] = 0bin10) => (afterxor_value_index2_0_3[31:0] = BVXOR(c_value_index2_0_3[31:0],x_value_2)) ) ;
ASSERT( (index2_0[7:6] = 0bin11) => (afterxor_value_index2_0_3[31:0] = BVXOR(c_value_index2_0_3[31:0],x_value_3)) ) ;
ASSERT( (index2_0[9:8] = 0bin00) => (afterxor_value_index2_0_4[31:0] = BVXOR(c_value_index2_0_4[31:0],x_value_0)) ) ;
ASSERT( (index2_0[9:8] = 0bin01) => (afterxor_value_index2_0_4[31:0] = BVXOR(c_value_index2_0_4[31:0],x_value_1)) ) ;
ASSERT( (index2_0[9:8] = 0bin10) => (afterxor_value_index2_0_4[31:0] = BVXOR(c_value_index2_0_4[31:0],x_value_2)) ) ;
ASSERT( (index2_0[9:8] = 0bin11) => (afterxor_value_index2_0_4[31:0] = BVXOR(c_value_index2_0_4[31:0],x_value_3)) ) ;
ASSERT( (index2_1[1:0] = 0bin00) => (afterxor_value_index2_1_0[31:0] = BVXOR(c_value_index2_1_0[31:0],x_value_0)) ) ;
ASSERT( (index2_1[1:0] = 0bin01) => (afterxor_value_index2_1_0[31:0] = BVXOR(c_value_index2_1_0[31:0],x_value_1)) ) ;
ASSERT( (index2_1[1:0] = 0bin10) => (afterxor_value_index2_1_0[31:0] = BVXOR(c_value_index2_1_0[31:0],x_value_2)) ) ;
ASSERT( (index2_1[1:0] = 0bin11) => (afterxor_value_index2_1_0[31:0] = BVXOR(c_value_index2_1_0[31:0],x_value_3)) ) ;
ASSERT( (index2_1[3:2] = 0bin00) => (afterxor_value_index2_1_1[31:0] = BVXOR(c_value_index2_1_1[31:0],x_value_0)) ) ;
ASSERT( (index2_1[3:2] = 0bin01) => (afterxor_value_index2_1_1[31:0] = BVXOR(c_value_index2_1_1[31:0],x_value_1)) ) ;
ASSERT( (index2_1[3:2] = 0bin10) => (afterxor_value_index2_1_1[31:0] = BVXOR(c_value_index2_1_1[31:0],x_value_2)) ) ;
ASSERT( (index2_1[3:2] = 0bin11) => (afterxor_value_index2_1_1[31:0] = BVXOR(c_value_index2_1_1[31:0],x_value_3)) ) ;
ASSERT( (index2_1[5:4] = 0bin00) => (afterxor_value_index2_1_2[31:0] = BVXOR(c_value_index2_1_2[31:0],x_value_0)) ) ;
ASSERT( (index2_1[5:4] = 0bin01) => (afterxor_value_index2_1_2[31:0] = BVXOR(c_value_index2_1_2[31:0],x_value_1)) ) ;
ASSERT( (index2_1[5:4] = 0bin10) => (afterxor_value_index2_1_2[31:0] = BVXOR(c_value_index2_1_2[31:0],x_value_2)) ) ;
ASSERT( (index2_1[5:4] = 0bin11) => (afterxor_value_index2_1_2[31:0] = BVXOR(c_value_index2_1_2[31:0],x_value_3)) ) ;
ASSERT( (index2_1[7:6] = 0bin00) => (afterxor_value_index2_1_3[31:0] = BVXOR(c_value_index2_1_3[31:0],x_value_0)) ) ;
ASSERT( (index2_1[7:6] = 0bin01) => (afterxor_value_index2_1_3[31:0] = BVXOR(c_value_index2_1_3[31:0],x_value_1)) ) ;
ASSERT( (index2_1[7:6] = 0bin10) => (afterxor_value_index2_1_3[31:0] = BVXOR(c_value_index2_1_3[31:0],x_value_2)) ) ;
ASSERT( (index2_1[7:6] = 0bin11) => (afterxor_value_index2_1_3[31:0] = BVXOR(c_value_index2_1_3[31:0],x_value_3)) ) ;
ASSERT( (index2_1[9:8] = 0bin00) => (afterxor_value_index2_1_4[31:0] = BVXOR(c_value_index2_1_4[31:0],x_value_0)) ) ;
ASSERT( (index2_1[9:8] = 0bin01) => (afterxor_value_index2_1_4[31:0] = BVXOR(c_value_index2_1_4[31:0],x_value_1)) ) ;
ASSERT( (index2_1[9:8] = 0bin10) => (afterxor_value_index2_1_4[31:0] = BVXOR(c_value_index2_1_4[31:0],x_value_2)) ) ;
ASSERT( (index2_1[9:8] = 0bin11) => (afterxor_value_index2_1_4[31:0] = BVXOR(c_value_index2_1_4[31:0],x_value_3)) ) ;
ASSERT( (index2_2[1:0] = 0bin00) => (afterxor_value_index2_2_0[31:0] = BVXOR(c_value_index2_2_0[31:0],x_value_0)) ) ;
ASSERT( (index2_2[1:0] = 0bin01) => (afterxor_value_index2_2_0[31:0] = BVXOR(c_value_index2_2_0[31:0],x_value_1)) ) ;
ASSERT( (index2_2[1:0] = 0bin10) => (afterxor_value_index2_2_0[31:0] = BVXOR(c_value_index2_2_0[31:0],x_value_2)) ) ;
ASSERT( (index2_2[1:0] = 0bin11) => (afterxor_value_index2_2_0[31:0] = BVXOR(c_value_index2_2_0[31:0],x_value_3)) ) ;
ASSERT( (index2_2[3:2] = 0bin00) => (afterxor_value_index2_2_1[31:0] = BVXOR(c_value_index2_2_1[31:0],x_value_0)) ) ;
ASSERT( (index2_2[3:2] = 0bin01) => (afterxor_value_index2_2_1[31:0] = BVXOR(c_value_index2_2_1[31:0],x_value_1)) ) ;
ASSERT( (index2_2[3:2] = 0bin10) => (afterxor_value_index2_2_1[31:0] = BVXOR(c_value_index2_2_1[31:0],x_value_2)) ) ;
ASSERT( (index2_2[3:2] = 0bin11) => (afterxor_value_index2_2_1[31:0] = BVXOR(c_value_index2_2_1[31:0],x_value_3)) ) ;
ASSERT( (index2_2[5:4] = 0bin00) => (afterxor_value_index2_2_2[31:0] = BVXOR(c_value_index2_2_2[31:0],x_value_0)) ) ;
ASSERT( (index2_2[5:4] = 0bin01) => (afterxor_value_index2_2_2[31:0] = BVXOR(c_value_index2_2_2[31:0],x_value_1)) ) ;
ASSERT( (index2_2[5:4] = 0bin10) => (afterxor_value_index2_2_2[31:0] = BVXOR(c_value_index2_2_2[31:0],x_value_2)) ) ;
ASSERT( (index2_2[5:4] = 0bin11) => (afterxor_value_index2_2_2[31:0] = BVXOR(c_value_index2_2_2[31:0],x_value_3)) ) ;
ASSERT( (index2_2[7:6] = 0bin00) => (afterxor_value_index2_2_3[31:0] = BVXOR(c_value_index2_2_3[31:0],x_value_0)) ) ;
ASSERT( (index2_2[7:6] = 0bin01) => (afterxor_value_index2_2_3[31:0] = BVXOR(c_value_index2_2_3[31:0],x_value_1)) ) ;
ASSERT( (index2_2[7:6] = 0bin10) => (afterxor_value_index2_2_3[31:0] = BVXOR(c_value_index2_2_3[31:0],x_value_2)) ) ;
ASSERT( (index2_2[7:6] = 0bin11) => (afterxor_value_index2_2_3[31:0] = BVXOR(c_value_index2_2_3[31:0],x_value_3)) ) ;
ASSERT( (index2_2[9:8] = 0bin00) => (afterxor_value_index2_2_4[31:0] = BVXOR(c_value_index2_2_4[31:0],x_value_0)) ) ;
ASSERT( (index2_2[9:8] = 0bin01) => (afterxor_value_index2_2_4[31:0] = BVXOR(c_value_index2_2_4[31:0],x_value_1)) ) ;
ASSERT( (index2_2[9:8] = 0bin10) => (afterxor_value_index2_2_4[31:0] = BVXOR(c_value_index2_2_4[31:0],x_value_2)) ) ;
ASSERT( (index2_2[9:8] = 0bin11) => (afterxor_value_index2_2_4[31:0] = BVXOR(c_value_index2_2_4[31:0],x_value_3)) ) ;
ASSERT( (index2_3[1:0] = 0bin00) => (afterxor_value_index2_3_0[31:0] = BVXOR(c_value_index2_3_0[31:0],x_value_0)) ) ;
ASSERT( (index2_3[1:0] = 0bin01) => (afterxor_value_index2_3_0[31:0] = BVXOR(c_value_index2_3_0[31:0],x_value_1)) ) ;
ASSERT( (index2_3[1:0] = 0bin10) => (afterxor_value_index2_3_0[31:0] = BVXOR(c_value_index2_3_0[31:0],x_value_2)) ) ;
ASSERT( (index2_3[1:0] = 0bin11) => (afterxor_value_index2_3_0[31:0] = BVXOR(c_value_index2_3_0[31:0],x_value_3)) ) ;
ASSERT( (index2_3[3:2] = 0bin00) => (afterxor_value_index2_3_1[31:0] = BVXOR(c_value_index2_3_1[31:0],x_value_0)) ) ;
ASSERT( (index2_3[3:2] = 0bin01) => (afterxor_value_index2_3_1[31:0] = BVXOR(c_value_index2_3_1[31:0],x_value_1)) ) ;
ASSERT( (index2_3[3:2] = 0bin10) => (afterxor_value_index2_3_1[31:0] = BVXOR(c_value_index2_3_1[31:0],x_value_2)) ) ;
ASSERT( (index2_3[3:2] = 0bin11) => (afterxor_value_index2_3_1[31:0] = BVXOR(c_value_index2_3_1[31:0],x_value_3)) ) ;
ASSERT( (index2_3[5:4] = 0bin00) => (afterxor_value_index2_3_2[31:0] = BVXOR(c_value_index2_3_2[31:0],x_value_0)) ) ;
ASSERT( (index2_3[5:4] = 0bin01) => (afterxor_value_index2_3_2[31:0] = BVXOR(c_value_index2_3_2[31:0],x_value_1)) ) ;
ASSERT( (index2_3[5:4] = 0bin10) => (afterxor_value_index2_3_2[31:0] = BVXOR(c_value_index2_3_2[31:0],x_value_2)) ) ;
ASSERT( (index2_3[5:4] = 0bin11) => (afterxor_value_index2_3_2[31:0] = BVXOR(c_value_index2_3_2[31:0],x_value_3)) ) ;
ASSERT( (index2_3[7:6] = 0bin00) => (afterxor_value_index2_3_3[31:0] = BVXOR(c_value_index2_3_3[31:0],x_value_0)) ) ;
ASSERT( (index2_3[7:6] = 0bin01) => (afterxor_value_index2_3_3[31:0] = BVXOR(c_value_index2_3_3[31:0],x_value_1)) ) ;
ASSERT( (index2_3[7:6] = 0bin10) => (afterxor_value_index2_3_3[31:0] = BVXOR(c_value_index2_3_3[31:0],x_value_2)) ) ;
ASSERT( (index2_3[7:6] = 0bin11) => (afterxor_value_index2_3_3[31:0] = BVXOR(c_value_index2_3_3[31:0],x_value_3)) ) ;
ASSERT( (index2_3[9:8] = 0bin00) => (afterxor_value_index2_3_4[31:0] = BVXOR(c_value_index2_3_4[31:0],x_value_0)) ) ;
ASSERT( (index2_3[9:8] = 0bin01) => (afterxor_value_index2_3_4[31:0] = BVXOR(c_value_index2_3_4[31:0],x_value_1)) ) ;
ASSERT( (index2_3[9:8] = 0bin10) => (afterxor_value_index2_3_4[31:0] = BVXOR(c_value_index2_3_4[31:0],x_value_2)) ) ;
ASSERT( (index2_3[9:8] = 0bin11) => (afterxor_value_index2_3_4[31:0] = BVXOR(c_value_index2_3_4[31:0],x_value_3)) ) ;
ASSERT( (index2_4[1:0] = 0bin00) => (afterxor_value_index2_4_0[31:0] = BVXOR(c_value_index2_4_0[31:0],x_value_0)) ) ;
ASSERT( (index2_4[1:0] = 0bin01) => (afterxor_value_index2_4_0[31:0] = BVXOR(c_value_index2_4_0[31:0],x_value_1)) ) ;
ASSERT( (index2_4[1:0] = 0bin10) => (afterxor_value_index2_4_0[31:0] = BVXOR(c_value_index2_4_0[31:0],x_value_2)) ) ;
ASSERT( (index2_4[1:0] = 0bin11) => (afterxor_value_index2_4_0[31:0] = BVXOR(c_value_index2_4_0[31:0],x_value_3)) ) ;
ASSERT( (index2_4[3:2] = 0bin00) => (afterxor_value_index2_4_1[31:0] = BVXOR(c_value_index2_4_1[31:0],x_value_0)) ) ;
ASSERT( (index2_4[3:2] = 0bin01) => (afterxor_value_index2_4_1[31:0] = BVXOR(c_value_index2_4_1[31:0],x_value_1)) ) ;
ASSERT( (index2_4[3:2] = 0bin10) => (afterxor_value_index2_4_1[31:0] = BVXOR(c_value_index2_4_1[31:0],x_value_2)) ) ;
ASSERT( (index2_4[3:2] = 0bin11) => (afterxor_value_index2_4_1[31:0] = BVXOR(c_value_index2_4_1[31:0],x_value_3)) ) ;
ASSERT( (index2_4[5:4] = 0bin00) => (afterxor_value_index2_4_2[31:0] = BVXOR(c_value_index2_4_2[31:0],x_value_0)) ) ;
ASSERT( (index2_4[5:4] = 0bin01) => (afterxor_value_index2_4_2[31:0] = BVXOR(c_value_index2_4_2[31:0],x_value_1)) ) ;
ASSERT( (index2_4[5:4] = 0bin10) => (afterxor_value_index2_4_2[31:0] = BVXOR(c_value_index2_4_2[31:0],x_value_2)) ) ;
ASSERT( (index2_4[5:4] = 0bin11) => (afterxor_value_index2_4_2[31:0] = BVXOR(c_value_index2_4_2[31:0],x_value_3)) ) ;
ASSERT( (index2_4[7:6] = 0bin00) => (afterxor_value_index2_4_3[31:0] = BVXOR(c_value_index2_4_3[31:0],x_value_0)) ) ;
ASSERT( (index2_4[7:6] = 0bin01) => (afterxor_value_index2_4_3[31:0] = BVXOR(c_value_index2_4_3[31:0],x_value_1)) ) ;
ASSERT( (index2_4[7:6] = 0bin10) => (afterxor_value_index2_4_3[31:0] = BVXOR(c_value_index2_4_3[31:0],x_value_2)) ) ;
ASSERT( (index2_4[7:6] = 0bin11) => (afterxor_value_index2_4_3[31:0] = BVXOR(c_value_index2_4_3[31:0],x_value_3)) ) ;
ASSERT( (index2_4[9:8] = 0bin00) => (afterxor_value_index2_4_4[31:0] = BVXOR(c_value_index2_4_4[31:0],x_value_0)) ) ;
ASSERT( (index2_4[9:8] = 0bin01) => (afterxor_value_index2_4_4[31:0] = BVXOR(c_value_index2_4_4[31:0],x_value_1)) ) ;
ASSERT( (index2_4[9:8] = 0bin10) => (afterxor_value_index2_4_4[31:0] = BVXOR(c_value_index2_4_4[31:0],x_value_2)) ) ;
ASSERT( (index2_4[9:8] = 0bin11) => (afterxor_value_index2_4_4[31:0] = BVXOR(c_value_index2_4_4[31:0],x_value_3)) ) ;

ASSERT( afterxor_value_index2_0_0[63:32] = c_value_index2_0_0[63:32] ) ;
ASSERT( afterxor_value_index2_0_1[63:32] = c_value_index2_0_1[63:32] ) ;
ASSERT( afterxor_value_index2_0_2[63:32] = c_value_index2_0_2[63:32] ) ;
ASSERT( afterxor_value_index2_0_3[63:32] = c_value_index2_0_3[63:32] ) ;
ASSERT( afterxor_value_index2_0_4[63:32] = c_value_index2_0_4[63:32] ) ;
ASSERT( afterxor_value_index2_1_0[63:32] = c_value_index2_1_0[63:32] ) ;
ASSERT( afterxor_value_index2_1_1[63:32] = c_value_index2_1_1[63:32] ) ;
ASSERT( afterxor_value_index2_1_2[63:32] = c_value_index2_1_2[63:32] ) ;
ASSERT( afterxor_value_index2_1_3[63:32] = c_value_index2_1_3[63:32] ) ;
ASSERT( afterxor_value_index2_1_4[63:32] = c_value_index2_1_4[63:32] ) ;
ASSERT( afterxor_value_index2_2_0[63:32] = c_value_index2_2_0[63:32] ) ;
ASSERT( afterxor_value_index2_2_1[63:32] = c_value_index2_2_1[63:32] ) ;
ASSERT( afterxor_value_index2_2_2[63:32] = c_value_index2_2_2[63:32] ) ;
ASSERT( afterxor_value_index2_2_3[63:32] = c_value_index2_2_3[63:32] ) ;
ASSERT( afterxor_value_index2_2_4[63:32] = c_value_index2_2_4[63:32] ) ;
ASSERT( afterxor_value_index2_3_0[63:32] = c_value_index2_3_0[63:32] ) ;
ASSERT( afterxor_value_index2_3_1[63:32] = c_value_index2_3_1[63:32] ) ;
ASSERT( afterxor_value_index2_3_2[63:32] = c_value_index2_3_2[63:32] ) ;
ASSERT( afterxor_value_index2_3_3[63:32] = c_value_index2_3_3[63:32] ) ;
ASSERT( afterxor_value_index2_3_4[63:32] = c_value_index2_3_4[63:32] ) ;
ASSERT( afterxor_value_index2_4_0[63:32] = c_value_index2_4_0[63:32] ) ;
ASSERT( afterxor_value_index2_4_1[63:32] = c_value_index2_4_1[63:32] ) ;
ASSERT( afterxor_value_index2_4_2[63:32] = c_value_index2_4_2[63:32] ) ;
ASSERT( afterxor_value_index2_4_3[63:32] = c_value_index2_4_3[63:32] ) ;
ASSERT( afterxor_value_index2_4_4[63:32] = c_value_index2_4_4[63:32] ) ;

ASSERT( middlesbox_1_value_index2_0_0 = BVXOR(afterxor_value_index2_0_0,afterxor_value_index2_0_4) ) ;
ASSERT( middlesbox_1_value_index2_0_1 = afterxor_value_index2_0_1 ) ;
ASSERT( middlesbox_1_value_index2_0_2 = BVXOR(afterxor_value_index2_0_2,afterxor_value_index2_0_1) ) ;
ASSERT( middlesbox_1_value_index2_0_3 = afterxor_value_index2_0_3 ) ;
ASSERT( middlesbox_1_value_index2_0_4 = BVXOR(afterxor_value_index2_0_4,afterxor_value_index2_0_3) ) ;
ASSERT( middlesbox_1_value_index2_1_0 = BVXOR(afterxor_value_index2_1_0,afterxor_value_index2_1_4) ) ;
ASSERT( middlesbox_1_value_index2_1_1 = afterxor_value_index2_1_1 ) ;
ASSERT( middlesbox_1_value_index2_1_2 = BVXOR(afterxor_value_index2_1_2,afterxor_value_index2_1_1) ) ;
ASSERT( middlesbox_1_value_index2_1_3 = afterxor_value_index2_1_3 ) ;
ASSERT( middlesbox_1_value_index2_1_4 = BVXOR(afterxor_value_index2_1_4,afterxor_value_index2_1_3) ) ;
ASSERT( middlesbox_1_value_index2_2_0 = BVXOR(afterxor_value_index2_2_0,afterxor_value_index2_2_4) ) ;
ASSERT( middlesbox_1_value_index2_2_1 = afterxor_value_index2_2_1 ) ;
ASSERT( middlesbox_1_value_index2_2_2 = BVXOR(afterxor_value_index2_2_2,afterxor_value_index2_2_1) ) ;
ASSERT( middlesbox_1_value_index2_2_3 = afterxor_value_index2_2_3 ) ;
ASSERT( middlesbox_1_value_index2_2_4 = BVXOR(afterxor_value_index2_2_4,afterxor_value_index2_2_3) ) ;
ASSERT( middlesbox_1_value_index2_3_0 = BVXOR(afterxor_value_index2_3_0,afterxor_value_index2_3_4) ) ;
ASSERT( middlesbox_1_value_index2_3_1 = afterxor_value_index2_3_1 ) ;
ASSERT( middlesbox_1_value_index2_3_2 = BVXOR(afterxor_value_index2_3_2,afterxor_value_index2_3_1) ) ;
ASSERT( middlesbox_1_value_index2_3_3 = afterxor_value_index2_3_3 ) ;
ASSERT( middlesbox_1_value_index2_3_4 = BVXOR(afterxor_value_index2_3_4,afterxor_value_index2_3_3) ) ;

ASSERT( middlesbox_2_value_index2_0_0 = (~middlesbox_1_value_index2_0_0) & middlesbox_1_value_index2_0_1 ) ;
ASSERT( middlesbox_2_value_index2_0_1 = (~middlesbox_1_value_index2_0_1) & middlesbox_1_value_index2_0_2 ) ;
ASSERT( middlesbox_2_value_index2_0_2 = (~middlesbox_1_value_index2_0_2) & middlesbox_1_value_index2_0_3 ) ;
ASSERT( middlesbox_2_value_index2_0_3 = (~middlesbox_1_value_index2_0_3) & middlesbox_1_value_index2_0_4 ) ;
ASSERT( middlesbox_2_value_index2_0_4 = (~middlesbox_1_value_index2_0_4) & middlesbox_1_value_index2_0_0 ) ;
ASSERT( middlesbox_2_value_index2_1_0 = (~middlesbox_1_value_index2_1_0) & middlesbox_1_value_index2_1_1 ) ;
ASSERT( middlesbox_2_value_index2_1_1 = (~middlesbox_1_value_index2_1_1) & middlesbox_1_value_index2_1_2 ) ;
ASSERT( middlesbox_2_value_index2_1_2 = (~middlesbox_1_value_index2_1_2) & middlesbox_1_value_index2_1_3 ) ;
ASSERT( middlesbox_2_value_index2_1_3 = (~middlesbox_1_value_index2_1_3) & middlesbox_1_value_index2_1_4 ) ;
ASSERT( middlesbox_2_value_index2_1_4 = (~middlesbox_1_value_index2_1_4) & middlesbox_1_value_index2_1_0 ) ;
ASSERT( middlesbox_2_value_index2_2_0 = (~middlesbox_1_value_index2_2_0) & middlesbox_1_value_index2_2_1 ) ;
ASSERT( middlesbox_2_value_index2_2_1 = (~middlesbox_1_value_index2_2_1) & middlesbox_1_value_index2_2_2 ) ;
ASSERT( middlesbox_2_value_index2_2_2 = (~middlesbox_1_value_index2_2_2) & middlesbox_1_value_index2_2_3 ) ;
ASSERT( middlesbox_2_value_index2_2_3 = (~middlesbox_1_value_index2_2_3) & middlesbox_1_value_index2_2_4 ) ;
ASSERT( middlesbox_2_value_index2_2_4 = (~middlesbox_1_value_index2_2_4) & middlesbox_1_value_index2_2_0 ) ;
ASSERT( middlesbox_2_value_index2_3_0 = (~middlesbox_1_value_index2_3_0) & middlesbox_1_value_index2_3_1 ) ;
ASSERT( middlesbox_2_value_index2_3_1 = (~middlesbox_1_value_index2_3_1) & middlesbox_1_value_index2_3_2 ) ;
ASSERT( middlesbox_2_value_index2_3_2 = (~middlesbox_1_value_index2_3_2) & middlesbox_1_value_index2_3_3 ) ;
ASSERT( middlesbox_2_value_index2_3_3 = (~middlesbox_1_value_index2_3_3) & middlesbox_1_value_index2_3_4 ) ;
ASSERT( middlesbox_2_value_index2_3_4 = (~middlesbox_1_value_index2_3_4) & middlesbox_1_value_index2_3_0 ) ;

ASSERT( middlesbox_3_value_index2_0_0 = BVXOR(middlesbox_1_value_index2_0_0,middlesbox_2_value_index2_0_1) ) ;
ASSERT( middlesbox_3_value_index2_0_1 = BVXOR(middlesbox_1_value_index2_0_1,middlesbox_2_value_index2_0_2) ) ;
ASSERT( middlesbox_3_value_index2_0_2 = BVXOR(middlesbox_1_value_index2_0_2,middlesbox_2_value_index2_0_3) ) ;
ASSERT( middlesbox_3_value_index2_0_3 = BVXOR(middlesbox_1_value_index2_0_3,middlesbox_2_value_index2_0_4) ) ;
ASSERT( middlesbox_3_value_index2_0_4 = BVXOR(middlesbox_1_value_index2_0_4,middlesbox_2_value_index2_0_0) ) ;
ASSERT( middlesbox_3_value_index2_1_0 = BVXOR(middlesbox_1_value_index2_1_0,middlesbox_2_value_index2_1_1) ) ;
ASSERT( middlesbox_3_value_index2_1_1 = BVXOR(middlesbox_1_value_index2_1_1,middlesbox_2_value_index2_1_2) ) ;
ASSERT( middlesbox_3_value_index2_1_2 = BVXOR(middlesbox_1_value_index2_1_2,middlesbox_2_value_index2_1_3) ) ;
ASSERT( middlesbox_3_value_index2_1_3 = BVXOR(middlesbox_1_value_index2_1_3,middlesbox_2_value_index2_1_4) ) ;
ASSERT( middlesbox_3_value_index2_1_4 = BVXOR(middlesbox_1_value_index2_1_4,middlesbox_2_value_index2_1_0) ) ;
ASSERT( middlesbox_3_value_index2_2_0 = BVXOR(middlesbox_1_value_index2_2_0,middlesbox_2_value_index2_2_1) ) ;
ASSERT( middlesbox_3_value_index2_2_1 = BVXOR(middlesbox_1_value_index2_2_1,middlesbox_2_value_index2_2_2) ) ;
ASSERT( middlesbox_3_value_index2_2_2 = BVXOR(middlesbox_1_value_index2_2_2,middlesbox_2_value_index2_2_3) ) ;
ASSERT( middlesbox_3_value_index2_2_3 = BVXOR(middlesbox_1_value_index2_2_3,middlesbox_2_value_index2_2_4) ) ;
ASSERT( middlesbox_3_value_index2_2_4 = BVXOR(middlesbox_1_value_index2_2_4,middlesbox_2_value_index2_2_0) ) ;
ASSERT( middlesbox_3_value_index2_3_0 = BVXOR(middlesbox_1_value_index2_3_0,middlesbox_2_value_index2_3_1) ) ;
ASSERT( middlesbox_3_value_index2_3_1 = BVXOR(middlesbox_1_value_index2_3_1,middlesbox_2_value_index2_3_2) ) ;
ASSERT( middlesbox_3_value_index2_3_2 = BVXOR(middlesbox_1_value_index2_3_2,middlesbox_2_value_index2_3_3) ) ;
ASSERT( middlesbox_3_value_index2_3_3 = BVXOR(middlesbox_1_value_index2_3_3,middlesbox_2_value_index2_3_4) ) ;
ASSERT( middlesbox_3_value_index2_3_4 = BVXOR(middlesbox_1_value_index2_3_4,middlesbox_2_value_index2_3_0) ) ;

ASSERT( middlesbox_4_value_index2_0_0 = BVXOR(middlesbox_3_value_index2_0_0,middlesbox_3_value_index2_0_4) ) ;
ASSERT( middlesbox_4_value_index2_0_1 = BVXOR(middlesbox_3_value_index2_0_0,middlesbox_3_value_index2_0_1) ) ;
ASSERT( middlesbox_4_value_index2_0_2 = middlesbox_3_value_index2_0_2 ) ;
ASSERT( middlesbox_4_value_index2_0_3 = BVXOR(middlesbox_3_value_index2_0_2,middlesbox_3_value_index2_0_3) ) ;
ASSERT( middlesbox_4_value_index2_0_4 = middlesbox_3_value_index2_0_4 ) ;
ASSERT( middlesbox_4_value_index2_1_0 = BVXOR(middlesbox_3_value_index2_1_0,middlesbox_3_value_index2_1_4) ) ;
ASSERT( middlesbox_4_value_index2_1_1 = BVXOR(middlesbox_3_value_index2_1_0,middlesbox_3_value_index2_1_1) ) ;
ASSERT( middlesbox_4_value_index2_1_2 = middlesbox_3_value_index2_1_2 ) ;
ASSERT( middlesbox_4_value_index2_1_3 = BVXOR(middlesbox_3_value_index2_1_2,middlesbox_3_value_index2_1_3) ) ;
ASSERT( middlesbox_4_value_index2_1_4 = middlesbox_3_value_index2_1_4 ) ;
ASSERT( middlesbox_4_value_index2_2_0 = BVXOR(middlesbox_3_value_index2_2_0,middlesbox_3_value_index2_2_4) ) ;
ASSERT( middlesbox_4_value_index2_2_1 = BVXOR(middlesbox_3_value_index2_2_0,middlesbox_3_value_index2_2_1) ) ;
ASSERT( middlesbox_4_value_index2_2_2 = middlesbox_3_value_index2_2_2 ) ;
ASSERT( middlesbox_4_value_index2_2_3 = BVXOR(middlesbox_3_value_index2_2_2,middlesbox_3_value_index2_2_3) ) ;
ASSERT( middlesbox_4_value_index2_2_4 = middlesbox_3_value_index2_2_4 ) ;
ASSERT( middlesbox_4_value_index2_3_0 = BVXOR(middlesbox_3_value_index2_3_0,middlesbox_3_value_index2_3_4) ) ;
ASSERT( middlesbox_4_value_index2_3_1 = BVXOR(middlesbox_3_value_index2_3_0,middlesbox_3_value_index2_3_1) ) ;
ASSERT( middlesbox_4_value_index2_3_2 = middlesbox_3_value_index2_3_2 ) ;
ASSERT( middlesbox_4_value_index2_3_3 = BVXOR(middlesbox_3_value_index2_3_2,middlesbox_3_value_index2_3_3) ) ;
ASSERT( middlesbox_4_value_index2_3_4 = middlesbox_3_value_index2_3_4 ) ;

ASSERT( aftersbox_value_index2_0_0 = middlesbox_4_value_index2_0_0 ) ;
ASSERT( aftersbox_value_index2_0_1 = middlesbox_4_value_index2_0_1 ) ;
ASSERT( aftersbox_value_index2_0_2 = ~middlesbox_4_value_index2_0_2 ) ;
ASSERT( aftersbox_value_index2_0_3 = middlesbox_4_value_index2_0_3 ) ;
ASSERT( aftersbox_value_index2_0_4 = middlesbox_4_value_index2_0_4 ) ;
ASSERT( aftersbox_value_index2_1_0 = middlesbox_4_value_index2_1_0 ) ;
ASSERT( aftersbox_value_index2_1_1 = middlesbox_4_value_index2_1_1 ) ;
ASSERT( aftersbox_value_index2_1_2 = ~middlesbox_4_value_index2_1_2 ) ;
ASSERT( aftersbox_value_index2_1_3 = middlesbox_4_value_index2_1_3 ) ;
ASSERT( aftersbox_value_index2_1_4 = middlesbox_4_value_index2_1_4 ) ;
ASSERT( aftersbox_value_index2_2_0 = middlesbox_4_value_index2_2_0 ) ;
ASSERT( aftersbox_value_index2_2_1 = middlesbox_4_value_index2_2_1 ) ;
ASSERT( aftersbox_value_index2_2_2 = ~middlesbox_4_value_index2_2_2 ) ;
ASSERT( aftersbox_value_index2_2_3 = middlesbox_4_value_index2_2_3 ) ;
ASSERT( aftersbox_value_index2_2_4 = middlesbox_4_value_index2_2_4 ) ;
ASSERT( aftersbox_value_index2_3_0 = middlesbox_4_value_index2_3_0 ) ;
ASSERT( aftersbox_value_index2_3_1 = middlesbox_4_value_index2_3_1 ) ;
ASSERT( aftersbox_value_index2_3_2 = ~middlesbox_4_value_index2_3_2 ) ;
ASSERT( aftersbox_value_index2_3_3 = middlesbox_4_value_index2_3_3 ) ;
ASSERT( aftersbox_value_index2_3_4 = middlesbox_4_value_index2_3_4 ) ;

ASSERT( middlelinearlayer_value_index2_0_0 = BVXOR(aftersbox_value_index2_0_0,aftersbox_value_index2_0_0[9:0]@aftersbox_value_index2_0_0[31:10]@aftersbox_value_index2_0_0[40:32]@aftersbox_value_index2_0_0[63:41]) ) ;
ASSERT( afterlinearlayer_value_index2_0_0 = BVXOR(middlelinearlayer_value_index2_0_0,aftersbox_value_index2_0_0[45:32]@aftersbox_value_index2_0_0[63:46]@aftersbox_value_index2_0_0[13:0]@aftersbox_value_index2_0_0[31:14]) ) ;
ASSERT( middlelinearlayer_value_index2_1_0 = BVXOR(aftersbox_value_index2_1_0,aftersbox_value_index2_1_0[9:0]@aftersbox_value_index2_1_0[31:10]@aftersbox_value_index2_1_0[40:32]@aftersbox_value_index2_1_0[63:41]) ) ;
ASSERT( afterlinearlayer_value_index2_1_0 = BVXOR(middlelinearlayer_value_index2_1_0,aftersbox_value_index2_1_0[45:32]@aftersbox_value_index2_1_0[63:46]@aftersbox_value_index2_1_0[13:0]@aftersbox_value_index2_1_0[31:14]) ) ;
ASSERT( middlelinearlayer_value_index2_2_0 = BVXOR(aftersbox_value_index2_2_0,aftersbox_value_index2_2_0[9:0]@aftersbox_value_index2_2_0[31:10]@aftersbox_value_index2_2_0[40:32]@aftersbox_value_index2_2_0[63:41]) ) ;
ASSERT( afterlinearlayer_value_index2_2_0 = BVXOR(middlelinearlayer_value_index2_2_0,aftersbox_value_index2_2_0[45:32]@aftersbox_value_index2_2_0[63:46]@aftersbox_value_index2_2_0[13:0]@aftersbox_value_index2_2_0[31:14]) ) ;
ASSERT( middlelinearlayer_value_index2_3_0 = BVXOR(aftersbox_value_index2_3_0,aftersbox_value_index2_3_0[9:0]@aftersbox_value_index2_3_0[31:10]@aftersbox_value_index2_3_0[40:32]@aftersbox_value_index2_3_0[63:41]) ) ;
ASSERT( afterlinearlayer_value_index2_3_0 = BVXOR(middlelinearlayer_value_index2_3_0,aftersbox_value_index2_3_0[45:32]@aftersbox_value_index2_3_0[63:46]@aftersbox_value_index2_3_0[13:0]@aftersbox_value_index2_3_0[31:14]) ) ;

ASSERT( middlelinearlayer_value_index2_0_1 = BVXOR(aftersbox_value_index2_0_1,aftersbox_value_index2_0_1[30:0]@aftersbox_value_index2_0_1[31:31]@aftersbox_value_index2_0_1[61:32]@aftersbox_value_index2_0_1[63:62]) ) ;
ASSERT( afterlinearlayer_value_index2_0_1 = BVXOR(middlelinearlayer_value_index2_0_1,aftersbox_value_index2_0_1[50:32]@aftersbox_value_index2_0_1[63:51]@aftersbox_value_index2_0_1[18:0]@aftersbox_value_index2_0_1[31:19]) ) ;
ASSERT( middlelinearlayer_value_index2_1_1 = BVXOR(aftersbox_value_index2_1_1,aftersbox_value_index2_1_1[30:0]@aftersbox_value_index2_1_1[31:31]@aftersbox_value_index2_1_1[61:32]@aftersbox_value_index2_1_1[63:62]) ) ;
ASSERT( afterlinearlayer_value_index2_1_1 = BVXOR(middlelinearlayer_value_index2_1_1,aftersbox_value_index2_1_1[50:32]@aftersbox_value_index2_1_1[63:51]@aftersbox_value_index2_1_1[18:0]@aftersbox_value_index2_1_1[31:19]) ) ;
ASSERT( middlelinearlayer_value_index2_2_1 = BVXOR(aftersbox_value_index2_2_1,aftersbox_value_index2_2_1[30:0]@aftersbox_value_index2_2_1[31:31]@aftersbox_value_index2_2_1[61:32]@aftersbox_value_index2_2_1[63:62]) ) ;
ASSERT( afterlinearlayer_value_index2_2_1 = BVXOR(middlelinearlayer_value_index2_2_1,aftersbox_value_index2_2_1[50:32]@aftersbox_value_index2_2_1[63:51]@aftersbox_value_index2_2_1[18:0]@aftersbox_value_index2_2_1[31:19]) ) ;
ASSERT( middlelinearlayer_value_index2_3_1 = BVXOR(aftersbox_value_index2_3_1,aftersbox_value_index2_3_1[30:0]@aftersbox_value_index2_3_1[31:31]@aftersbox_value_index2_3_1[61:32]@aftersbox_value_index2_3_1[63:62]) ) ;
ASSERT( afterlinearlayer_value_index2_3_1 = BVXOR(middlelinearlayer_value_index2_3_1,aftersbox_value_index2_3_1[50:32]@aftersbox_value_index2_3_1[63:51]@aftersbox_value_index2_3_1[18:0]@aftersbox_value_index2_3_1[31:19]) ) ;

ASSERT( middlelinearlayer_value_index2_0_2 = BVXOR(aftersbox_value_index2_0_2,aftersbox_value_index2_0_2[0:0]@aftersbox_value_index2_0_2[31:1]@aftersbox_value_index2_0_2[63:32]) ) ;
ASSERT( afterlinearlayer_value_index2_0_2 = BVXOR(middlelinearlayer_value_index2_0_2,aftersbox_value_index2_0_2[34:32]@aftersbox_value_index2_0_2[63:35]@aftersbox_value_index2_0_2[2:0]@aftersbox_value_index2_0_2[31:3]) ) ;
ASSERT( middlelinearlayer_value_index2_1_2 = BVXOR(aftersbox_value_index2_1_2,aftersbox_value_index2_1_2[0:0]@aftersbox_value_index2_1_2[31:1]@aftersbox_value_index2_1_2[63:32]) ) ;
ASSERT( afterlinearlayer_value_index2_1_2 = BVXOR(middlelinearlayer_value_index2_1_2,aftersbox_value_index2_1_2[34:32]@aftersbox_value_index2_1_2[63:35]@aftersbox_value_index2_1_2[2:0]@aftersbox_value_index2_1_2[31:3]) ) ;
ASSERT( middlelinearlayer_value_index2_2_2 = BVXOR(aftersbox_value_index2_2_2,aftersbox_value_index2_2_2[0:0]@aftersbox_value_index2_2_2[31:1]@aftersbox_value_index2_2_2[63:32]) ) ;
ASSERT( afterlinearlayer_value_index2_2_2 = BVXOR(middlelinearlayer_value_index2_2_2,aftersbox_value_index2_2_2[34:32]@aftersbox_value_index2_2_2[63:35]@aftersbox_value_index2_2_2[2:0]@aftersbox_value_index2_2_2[31:3]) ) ;
ASSERT( middlelinearlayer_value_index2_3_2 = BVXOR(aftersbox_value_index2_3_2,aftersbox_value_index2_3_2[0:0]@aftersbox_value_index2_3_2[31:1]@aftersbox_value_index2_3_2[63:32]) ) ;
ASSERT( afterlinearlayer_value_index2_3_2 = BVXOR(middlelinearlayer_value_index2_3_2,aftersbox_value_index2_3_2[34:32]@aftersbox_value_index2_3_2[63:35]@aftersbox_value_index2_3_2[2:0]@aftersbox_value_index2_3_2[31:3]) ) ;

ASSERT( middlelinearlayer_value_index2_0_3 = BVXOR(aftersbox_value_index2_0_3,aftersbox_value_index2_0_3[36:32]@aftersbox_value_index2_0_3[63:37]@aftersbox_value_index2_0_3[4:0]@aftersbox_value_index2_0_3[31:5]) ) ;
ASSERT( afterlinearlayer_value_index2_0_3 = BVXOR(middlelinearlayer_value_index2_0_3,aftersbox_value_index2_0_3[8:0]@aftersbox_value_index2_0_3[31:9]@aftersbox_value_index2_0_3[39:32]@aftersbox_value_index2_0_3[63:40]) ) ;
ASSERT( middlelinearlayer_value_index2_1_3 = BVXOR(aftersbox_value_index2_1_3,aftersbox_value_index2_1_3[36:32]@aftersbox_value_index2_1_3[63:37]@aftersbox_value_index2_1_3[4:0]@aftersbox_value_index2_1_3[31:5]) ) ;
ASSERT( afterlinearlayer_value_index2_1_3 = BVXOR(middlelinearlayer_value_index2_1_3,aftersbox_value_index2_1_3[8:0]@aftersbox_value_index2_1_3[31:9]@aftersbox_value_index2_1_3[39:32]@aftersbox_value_index2_1_3[63:40]) ) ;
ASSERT( middlelinearlayer_value_index2_2_3 = BVXOR(aftersbox_value_index2_2_3,aftersbox_value_index2_2_3[36:32]@aftersbox_value_index2_2_3[63:37]@aftersbox_value_index2_2_3[4:0]@aftersbox_value_index2_2_3[31:5]) ) ;
ASSERT( afterlinearlayer_value_index2_2_3 = BVXOR(middlelinearlayer_value_index2_2_3,aftersbox_value_index2_2_3[8:0]@aftersbox_value_index2_2_3[31:9]@aftersbox_value_index2_2_3[39:32]@aftersbox_value_index2_2_3[63:40]) ) ;
ASSERT( middlelinearlayer_value_index2_3_3 = BVXOR(aftersbox_value_index2_3_3,aftersbox_value_index2_3_3[36:32]@aftersbox_value_index2_3_3[63:37]@aftersbox_value_index2_3_3[4:0]@aftersbox_value_index2_3_3[31:5]) ) ;
ASSERT( afterlinearlayer_value_index2_3_3 = BVXOR(middlelinearlayer_value_index2_3_3,aftersbox_value_index2_3_3[8:0]@aftersbox_value_index2_3_3[31:9]@aftersbox_value_index2_3_3[39:32]@aftersbox_value_index2_3_3[63:40]) ) ;

ASSERT( middlelinearlayer_value_index2_0_4 = BVXOR(aftersbox_value_index2_0_4,aftersbox_value_index2_0_4[3:0]@aftersbox_value_index2_0_4[31:4]@aftersbox_value_index2_0_4[34:32]@aftersbox_value_index2_0_4[63:35]) ) ;
ASSERT( afterlinearlayer_value_index2_0_4 = BVXOR(middlelinearlayer_value_index2_0_4,aftersbox_value_index2_0_4[51:32]@aftersbox_value_index2_0_4[63:52]@aftersbox_value_index2_0_4[19:0]@aftersbox_value_index2_0_4[31:20]) ) ;
ASSERT( middlelinearlayer_value_index2_1_4 = BVXOR(aftersbox_value_index2_1_4,aftersbox_value_index2_1_4[3:0]@aftersbox_value_index2_1_4[31:4]@aftersbox_value_index2_1_4[34:32]@aftersbox_value_index2_1_4[63:35]) ) ;
ASSERT( afterlinearlayer_value_index2_1_4 = BVXOR(middlelinearlayer_value_index2_1_4,aftersbox_value_index2_1_4[51:32]@aftersbox_value_index2_1_4[63:52]@aftersbox_value_index2_1_4[19:0]@aftersbox_value_index2_1_4[31:20]) ) ;
ASSERT( middlelinearlayer_value_index2_2_4 = BVXOR(aftersbox_value_index2_2_4,aftersbox_value_index2_2_4[3:0]@aftersbox_value_index2_2_4[31:4]@aftersbox_value_index2_2_4[34:32]@aftersbox_value_index2_2_4[63:35]) ) ;
ASSERT( afterlinearlayer_value_index2_2_4 = BVXOR(middlelinearlayer_value_index2_2_4,aftersbox_value_index2_2_4[51:32]@aftersbox_value_index2_2_4[63:52]@aftersbox_value_index2_2_4[19:0]@aftersbox_value_index2_2_4[31:20]) ) ;
ASSERT( middlelinearlayer_value_index2_3_4 = BVXOR(aftersbox_value_index2_3_4,aftersbox_value_index2_3_4[3:0]@aftersbox_value_index2_3_4[31:4]@aftersbox_value_index2_3_4[34:32]@aftersbox_value_index2_3_4[63:35]) ) ;
ASSERT( afterlinearlayer_value_index2_3_4 = BVXOR(middlelinearlayer_value_index2_3_4,aftersbox_value_index2_3_4[51:32]@aftersbox_value_index2_3_4[63:52]@aftersbox_value_index2_3_4[19:0]@aftersbox_value_index2_3_4[31:20]) ) ;

ASSERT( c_value_index1_1_0 = afterlinearlayer_value_index1_0_0 ) ;
ASSERT( c_value_index1_1_1 = afterlinearlayer_value_index1_0_1 ) ;
ASSERT( c_value_index1_1_2 = afterlinearlayer_value_index1_0_2 ) ;
ASSERT( c_value_index1_1_3 = afterlinearlayer_value_index1_0_3 ) ;
ASSERT( c_value_index1_1_4 = afterlinearlayer_value_index1_0_4 ) ;
ASSERT( c_value_index1_2_0 = afterlinearlayer_value_index1_1_0 ) ;
ASSERT( c_value_index1_2_1 = afterlinearlayer_value_index1_1_1 ) ;
ASSERT( c_value_index1_2_2 = afterlinearlayer_value_index1_1_2 ) ;
ASSERT( c_value_index1_2_3 = afterlinearlayer_value_index1_1_3 ) ;
ASSERT( c_value_index1_2_4 = afterlinearlayer_value_index1_1_4 ) ;
ASSERT( c_value_index1_3_0 = afterlinearlayer_value_index1_2_0 ) ;
ASSERT( c_value_index1_3_1 = afterlinearlayer_value_index1_2_1 ) ;
ASSERT( c_value_index1_3_2 = afterlinearlayer_value_index1_2_2 ) ;
ASSERT( c_value_index1_3_3 = afterlinearlayer_value_index1_2_3 ) ;
ASSERT( c_value_index1_3_4 = afterlinearlayer_value_index1_2_4 ) ;
ASSERT( c_value_index1_4_0 = afterlinearlayer_value_index1_3_0 ) ;
ASSERT( c_value_index1_4_1 = afterlinearlayer_value_index1_3_1 ) ;
ASSERT( c_value_index1_4_2 = afterlinearlayer_value_index1_3_2 ) ;
ASSERT( c_value_index1_4_3 = afterlinearlayer_value_index1_3_3 ) ;
ASSERT( c_value_index1_4_4 = afterlinearlayer_value_index1_3_4 ) ;

ASSERT( c_value_index2_1_0 = afterlinearlayer_value_index2_0_0 ) ;
ASSERT( c_value_index2_1_1 = afterlinearlayer_value_index2_0_1 ) ;
ASSERT( c_value_index2_1_2 = afterlinearlayer_value_index2_0_2 ) ;
ASSERT( c_value_index2_1_3 = afterlinearlayer_value_index2_0_3 ) ;
ASSERT( c_value_index2_1_4 = afterlinearlayer_value_index2_0_4 ) ;
ASSERT( c_value_index2_2_0 = afterlinearlayer_value_index2_1_0 ) ;
ASSERT( c_value_index2_2_1 = afterlinearlayer_value_index2_1_1 ) ;
ASSERT( c_value_index2_2_2 = afterlinearlayer_value_index2_1_2 ) ;
ASSERT( c_value_index2_2_3 = afterlinearlayer_value_index2_1_3 ) ;
ASSERT( c_value_index2_2_4 = afterlinearlayer_value_index2_1_4 ) ;
ASSERT( c_value_index2_3_0 = afterlinearlayer_value_index2_2_0 ) ;
ASSERT( c_value_index2_3_1 = afterlinearlayer_value_index2_2_1 ) ;
ASSERT( c_value_index2_3_2 = afterlinearlayer_value_index2_2_2 ) ;
ASSERT( c_value_index2_3_3 = afterlinearlayer_value_index2_2_3 ) ;
ASSERT( c_value_index2_3_4 = afterlinearlayer_value_index2_2_4 ) ;
ASSERT( c_value_index2_4_0 = afterlinearlayer_value_index2_3_0 ) ;
ASSERT( c_value_index2_4_1 = afterlinearlayer_value_index2_3_1 ) ;
ASSERT( c_value_index2_4_2 = afterlinearlayer_value_index2_3_2 ) ;
ASSERT( c_value_index2_4_3 = afterlinearlayer_value_index2_3_3 ) ;
ASSERT( c_value_index2_4_4 = afterlinearlayer_value_index2_3_4 ) ;

c_difference_0_0: BITVECTOR(64) ;
c_difference_0_1: BITVECTOR(64) ;
c_difference_0_2: BITVECTOR(64) ;
c_difference_0_3: BITVECTOR(64) ;
c_difference_0_4: BITVECTOR(64) ;
c_difference_1_0: BITVECTOR(64) ;
c_difference_1_1: BITVECTOR(64) ;
c_difference_1_2: BITVECTOR(64) ;
c_difference_1_3: BITVECTOR(64) ;
c_difference_1_4: BITVECTOR(64) ;
c_difference_2_0: BITVECTOR(64) ;
c_difference_2_1: BITVECTOR(64) ;
c_difference_2_2: BITVECTOR(64) ;
c_difference_2_3: BITVECTOR(64) ;
c_difference_2_4: BITVECTOR(64) ;
c_difference_3_0: BITVECTOR(64) ;
c_difference_3_1: BITVECTOR(64) ;
c_difference_3_2: BITVECTOR(64) ;
c_difference_3_3: BITVECTOR(64) ;
c_difference_3_4: BITVECTOR(64) ;
c_difference_4_0: BITVECTOR(64) ;
c_difference_4_1: BITVECTOR(64) ;
c_difference_4_2: BITVECTOR(64) ;
c_difference_4_3: BITVECTOR(64) ;
c_difference_4_4: BITVECTOR(64) ;

ASSERT( c_difference_0_0 = BVXOR(c_value_index1_0_0,c_value_index2_0_0) ) ;
ASSERT( c_difference_0_1 = BVXOR(c_value_index1_0_1,c_value_index2_0_1) ) ;
ASSERT( c_difference_0_2 = BVXOR(c_value_index1_0_2,c_value_index2_0_2) ) ;
ASSERT( c_difference_0_3 = BVXOR(c_value_index1_0_3,c_value_index2_0_3) ) ;
ASSERT( c_difference_0_4 = BVXOR(c_value_index1_0_4,c_value_index2_0_4) ) ;
ASSERT( c_difference_1_0 = BVXOR(c_value_index1_1_0,c_value_index2_1_0) ) ;
ASSERT( c_difference_1_1 = BVXOR(c_value_index1_1_1,c_value_index2_1_1) ) ;
ASSERT( c_difference_1_2 = BVXOR(c_value_index1_1_2,c_value_index2_1_2) ) ;
ASSERT( c_difference_1_3 = BVXOR(c_value_index1_1_3,c_value_index2_1_3) ) ;
ASSERT( c_difference_1_4 = BVXOR(c_value_index1_1_4,c_value_index2_1_4) ) ;
ASSERT( c_difference_2_0 = BVXOR(c_value_index1_2_0,c_value_index2_2_0) ) ;
ASSERT( c_difference_2_1 = BVXOR(c_value_index1_2_1,c_value_index2_2_1) ) ;
ASSERT( c_difference_2_2 = BVXOR(c_value_index1_2_2,c_value_index2_2_2) ) ;
ASSERT( c_difference_2_3 = BVXOR(c_value_index1_2_3,c_value_index2_2_3) ) ;
ASSERT( c_difference_2_4 = BVXOR(c_value_index1_2_4,c_value_index2_2_4) ) ;
ASSERT( c_difference_3_0 = BVXOR(c_value_index1_3_0,c_value_index2_3_0) ) ;
ASSERT( c_difference_3_1 = BVXOR(c_value_index1_3_1,c_value_index2_3_1) ) ;
ASSERT( c_difference_3_2 = BVXOR(c_value_index1_3_2,c_value_index2_3_2) ) ;
ASSERT( c_difference_3_3 = BVXOR(c_value_index1_3_3,c_value_index2_3_3) ) ;
ASSERT( c_difference_3_4 = BVXOR(c_value_index1_3_4,c_value_index2_3_4) ) ;
ASSERT( c_difference_4_0 = BVXOR(c_value_index1_4_0,c_value_index2_4_0) ) ;
ASSERT( c_difference_4_1 = BVXOR(c_value_index1_4_1,c_value_index2_4_1) ) ;
ASSERT( c_difference_4_2 = BVXOR(c_value_index1_4_2,c_value_index2_4_2) ) ;
ASSERT( c_difference_4_3 = BVXOR(c_value_index1_4_3,c_value_index2_4_3) ) ;
ASSERT( c_difference_4_4 = BVXOR(c_value_index1_4_4,c_value_index2_4_4) ) ;

afterxor_difference_0_0: BITVECTOR(64) ;
afterxor_difference_0_1: BITVECTOR(64) ;
afterxor_difference_0_2: BITVECTOR(64) ;
afterxor_difference_0_3: BITVECTOR(64) ;
afterxor_difference_0_4: BITVECTOR(64) ;
afterxor_difference_1_0: BITVECTOR(64) ;
afterxor_difference_1_1: BITVECTOR(64) ;
afterxor_difference_1_2: BITVECTOR(64) ;
afterxor_difference_1_3: BITVECTOR(64) ;
afterxor_difference_1_4: BITVECTOR(64) ;
afterxor_difference_2_0: BITVECTOR(64) ;
afterxor_difference_2_1: BITVECTOR(64) ;
afterxor_difference_2_2: BITVECTOR(64) ;
afterxor_difference_2_3: BITVECTOR(64) ;
afterxor_difference_2_4: BITVECTOR(64) ;
afterxor_difference_3_0: BITVECTOR(64) ;
afterxor_difference_3_1: BITVECTOR(64) ;
afterxor_difference_3_2: BITVECTOR(64) ;
afterxor_difference_3_3: BITVECTOR(64) ;
afterxor_difference_3_4: BITVECTOR(64) ;
afterxor_difference_4_0: BITVECTOR(64) ;
afterxor_difference_4_1: BITVECTOR(64) ;
afterxor_difference_4_2: BITVECTOR(64) ;
afterxor_difference_4_3: BITVECTOR(64) ;
afterxor_difference_4_4: BITVECTOR(64) ;

ASSERT( afterxor_difference_0_0 = BVXOR(afterxor_value_index1_0_0,afterxor_value_index2_0_0) ) ;
ASSERT( afterxor_difference_0_1 = BVXOR(afterxor_value_index1_0_1,afterxor_value_index2_0_1) ) ;
ASSERT( afterxor_difference_0_2 = BVXOR(afterxor_value_index1_0_2,afterxor_value_index2_0_2) ) ;
ASSERT( afterxor_difference_0_3 = BVXOR(afterxor_value_index1_0_3,afterxor_value_index2_0_3) ) ;
ASSERT( afterxor_difference_0_4 = BVXOR(afterxor_value_index1_0_4,afterxor_value_index2_0_4) ) ;
ASSERT( afterxor_difference_1_0 = BVXOR(afterxor_value_index1_1_0,afterxor_value_index2_1_0) ) ;
ASSERT( afterxor_difference_1_1 = BVXOR(afterxor_value_index1_1_1,afterxor_value_index2_1_1) ) ;
ASSERT( afterxor_difference_1_2 = BVXOR(afterxor_value_index1_1_2,afterxor_value_index2_1_2) ) ;
ASSERT( afterxor_difference_1_3 = BVXOR(afterxor_value_index1_1_3,afterxor_value_index2_1_3) ) ;
ASSERT( afterxor_difference_1_4 = BVXOR(afterxor_value_index1_1_4,afterxor_value_index2_1_4) ) ;
ASSERT( afterxor_difference_2_0 = BVXOR(afterxor_value_index1_2_0,afterxor_value_index2_2_0) ) ;
ASSERT( afterxor_difference_2_1 = BVXOR(afterxor_value_index1_2_1,afterxor_value_index2_2_1) ) ;
ASSERT( afterxor_difference_2_2 = BVXOR(afterxor_value_index1_2_2,afterxor_value_index2_2_2) ) ;
ASSERT( afterxor_difference_2_3 = BVXOR(afterxor_value_index1_2_3,afterxor_value_index2_2_3) ) ;
ASSERT( afterxor_difference_2_4 = BVXOR(afterxor_value_index1_2_4,afterxor_value_index2_2_4) ) ;
ASSERT( afterxor_difference_3_0 = BVXOR(afterxor_value_index1_3_0,afterxor_value_index2_3_0) ) ;
ASSERT( afterxor_difference_3_1 = BVXOR(afterxor_value_index1_3_1,afterxor_value_index2_3_1) ) ;
ASSERT( afterxor_difference_3_2 = BVXOR(afterxor_value_index1_3_2,afterxor_value_index2_3_2) ) ;
ASSERT( afterxor_difference_3_3 = BVXOR(afterxor_value_index1_3_3,afterxor_value_index2_3_3) ) ;
ASSERT( afterxor_difference_3_4 = BVXOR(afterxor_value_index1_3_4,afterxor_value_index2_3_4) ) ;
ASSERT( afterxor_difference_4_0 = BVXOR(afterxor_value_index1_4_0,afterxor_value_index2_4_0) ) ;
ASSERT( afterxor_difference_4_1 = BVXOR(afterxor_value_index1_4_1,afterxor_value_index2_4_1) ) ;
ASSERT( afterxor_difference_4_2 = BVXOR(afterxor_value_index1_4_2,afterxor_value_index2_4_2) ) ;
ASSERT( afterxor_difference_4_3 = BVXOR(afterxor_value_index1_4_3,afterxor_value_index2_4_3) ) ;
ASSERT( afterxor_difference_4_4 = BVXOR(afterxor_value_index1_4_4,afterxor_value_index2_4_4) ) ;

aftersbox_difference_0_0: BITVECTOR(64) ;
aftersbox_difference_0_1: BITVECTOR(64) ;
aftersbox_difference_0_2: BITVECTOR(64) ;
aftersbox_difference_0_3: BITVECTOR(64) ;
aftersbox_difference_0_4: BITVECTOR(64) ;
aftersbox_difference_1_0: BITVECTOR(64) ;
aftersbox_difference_1_1: BITVECTOR(64) ;
aftersbox_difference_1_2: BITVECTOR(64) ;
aftersbox_difference_1_3: BITVECTOR(64) ;
aftersbox_difference_1_4: BITVECTOR(64) ;
aftersbox_difference_2_0: BITVECTOR(64) ;
aftersbox_difference_2_1: BITVECTOR(64) ;
aftersbox_difference_2_2: BITVECTOR(64) ;
aftersbox_difference_2_3: BITVECTOR(64) ;
aftersbox_difference_2_4: BITVECTOR(64) ;
aftersbox_difference_3_0: BITVECTOR(64) ;
aftersbox_difference_3_1: BITVECTOR(64) ;
aftersbox_difference_3_2: BITVECTOR(64) ;
aftersbox_difference_3_3: BITVECTOR(64) ;
aftersbox_difference_3_4: BITVECTOR(64) ;

ASSERT( aftersbox_difference_0_0 = BVXOR(aftersbox_value_index1_0_0,aftersbox_value_index2_0_0) ) ;
ASSERT( aftersbox_difference_0_1 = BVXOR(aftersbox_value_index1_0_1,aftersbox_value_index2_0_1) ) ;
ASSERT( aftersbox_difference_0_2 = BVXOR(aftersbox_value_index1_0_2,aftersbox_value_index2_0_2) ) ;
ASSERT( aftersbox_difference_0_3 = BVXOR(aftersbox_value_index1_0_3,aftersbox_value_index2_0_3) ) ;
ASSERT( aftersbox_difference_0_4 = BVXOR(aftersbox_value_index1_0_4,aftersbox_value_index2_0_4) ) ;
ASSERT( aftersbox_difference_1_0 = BVXOR(aftersbox_value_index1_1_0,aftersbox_value_index2_1_0) ) ;
ASSERT( aftersbox_difference_1_1 = BVXOR(aftersbox_value_index1_1_1,aftersbox_value_index2_1_1) ) ;
ASSERT( aftersbox_difference_1_2 = BVXOR(aftersbox_value_index1_1_2,aftersbox_value_index2_1_2) ) ;
ASSERT( aftersbox_difference_1_3 = BVXOR(aftersbox_value_index1_1_3,aftersbox_value_index2_1_3) ) ;
ASSERT( aftersbox_difference_1_4 = BVXOR(aftersbox_value_index1_1_4,aftersbox_value_index2_1_4) ) ;
ASSERT( aftersbox_difference_2_0 = BVXOR(aftersbox_value_index1_2_0,aftersbox_value_index2_2_0) ) ;
ASSERT( aftersbox_difference_2_1 = BVXOR(aftersbox_value_index1_2_1,aftersbox_value_index2_2_1) ) ;
ASSERT( aftersbox_difference_2_2 = BVXOR(aftersbox_value_index1_2_2,aftersbox_value_index2_2_2) ) ;
ASSERT( aftersbox_difference_2_3 = BVXOR(aftersbox_value_index1_2_3,aftersbox_value_index2_2_3) ) ;
ASSERT( aftersbox_difference_2_4 = BVXOR(aftersbox_value_index1_2_4,aftersbox_value_index2_2_4) ) ;
ASSERT( aftersbox_difference_3_0 = BVXOR(aftersbox_value_index1_3_0,aftersbox_value_index2_3_0) ) ;
ASSERT( aftersbox_difference_3_1 = BVXOR(aftersbox_value_index1_3_1,aftersbox_value_index2_3_1) ) ;
ASSERT( aftersbox_difference_3_2 = BVXOR(aftersbox_value_index1_3_2,aftersbox_value_index2_3_2) ) ;
ASSERT( aftersbox_difference_3_3 = BVXOR(aftersbox_value_index1_3_3,aftersbox_value_index2_3_3) ) ;
ASSERT( aftersbox_difference_3_4 = BVXOR(aftersbox_value_index1_3_4,aftersbox_value_index2_3_4) ) ;

ASSERT( afterxor_difference_2_0 = 0hex0000000000000000 ) ;
ASSERT( afterxor_difference_2_1 = 0hex0000000040000008 ) ;
ASSERT( afterxor_difference_2_2 = 0hex0000000040000008 ) ;
ASSERT( afterxor_difference_2_3 = 0hex0000000040000008 ) ;
ASSERT( afterxor_difference_2_4 = 0hex0000000000000000 ) ;

ASSERT( aftersbox_difference_2_0 = 0hex0000000000000000 ) ;
ASSERT( aftersbox_difference_2_1 = 0hex0000000000000000 ) ;
ASSERT( aftersbox_difference_2_2 = 0hex0000000000000000 ) ;
ASSERT( aftersbox_difference_2_3 = 0hex0000000000000008 ) ;
ASSERT( aftersbox_difference_2_4 = 0hex0000000040000000 ) ;

ASSERT( afterxor_difference_3_0 = 0hex0000000000000000 ) ;
ASSERT( afterxor_difference_3_1 = 0hex0000000040000400 ) ;
ASSERT( afterxor_difference_3_2 = 0hex0000000040000400 ) ;
ASSERT( afterxor_difference_3_3 = 0hex0400000000000000 ) ;
ASSERT( afterxor_difference_3_4 = 0hex0400000000000000 ) ;

ASSERT( aftersbox_difference_3_0 = 0hex0000000000000000 ) ;
ASSERT( aftersbox_difference_3_1 = 0hex0000000000000000 ) ;
ASSERT( aftersbox_difference_3_2 = 0hex0000000000000000 ) ;
ASSERT( aftersbox_difference_3_3 = 0hex0000000000000000 ) ;
ASSERT( aftersbox_difference_3_4 = 0hex0400000040000400 ) ;

ASSERT( afterxor_difference_4_0 = 0hex0000000000000000 ) ;
ASSERT( afterxor_difference_4_1 = 0hex0000000000000000 ) ;
ASSERT( afterxor_difference_4_2 = 0hex0000000000000000 ) ;
ASSERT( afterxor_difference_4_3 = 0hex0000000000000000 ) ;
ASSERT( afterxor_difference_4_4 = 0hex0000000000000000 ) ;

ASSERT( x_value_0 = 0hexF26E3800 ) ;
ASSERT( x_value_1 = 0hexB26E3808 ) ;
ASSERT( x_value_2 = 0hexB26E3C00 ) ;
ASSERT( x_value_3 = 0hexB2AE3800 ) ;

ASSERT( c_value_index1_0_0 = 0hex146200830DB6AE02 );
ASSERT( c_value_index1_0_1 = 0hex1D69B897EBE52E68 );
ASSERT( c_value_index1_0_2 = 0hex146200830DB6AE02 );
ASSERT( c_value_index1_0_3 = 0hex1D69B897EBE52E68 );
ASSERT( c_value_index1_0_4 = 0hex146200830DB6AE02 );

ASSERT( c_value_index2_0_0 = 0hex146200830DB6AE02 );
ASSERT( c_value_index2_0_1 = 0hex1D69B897EBE52E68 );
ASSERT( c_value_index2_0_2 = 0hex146200830DB6AE02 );
ASSERT( c_value_index2_0_3 = 0hex1D69B897EBE52E68 );
ASSERT( c_value_index2_0_4 = 0hex146200830DB6AE02 );

ASSERT( index = 0bin00110011110111011101 ) ;
QUERY(FALSE) ;
COUNTEREXAMPLE ;
